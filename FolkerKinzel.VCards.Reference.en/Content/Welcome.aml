<?xml version="1.0" encoding="utf-8"?>
<topic id="397502cd-fe45-4dc2-a450-195693e7f902" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>FolkerKinzel.VCards is a full featured .NET-API to work with vCard files (*.vcf).</para>
      <para>It enables you</para>
      <list class="bullet">
        <listItem>
          <para>to load vcf files from the file system and to save them there,</para>
        </listItem>
        <listItem>
          <para>to serialize vcf files from and to Streams and</para>
        </listItem>
        <listItem>
          <para>to convert vCard files, that match the vCard-versions 2.1, 3.0 and 4.0, to each other.</para>
        </listItem>
      </list>
      <para>Parse errors are silently ignored.</para>
      <para>The same is for errors, that occur serializing the vCard: Because of the different vCard-standards are not completely compliant,
      incompliant data is silently ignored when converting from one vCard-Standard to another. To minimize the data loss, the API tries to preserve
      incompliant data using well-known Non-Standard-Properties. The usage of such Non-Standard-Properties can be controlled via options (VcfOptions).</para>
		</introduction>


    <section address="DataModel">
      <title>The VCard-Data-Model</title>
      <content>
        <para>
          The data model used by this API is aligned to the vCard 4.0 standard (RFC6350). This means, every read
          vCard of version 2.1 and 3.0 is internally converted to vCard 4.0. When saved and serialized, they are 
          converted back.
        </para>
        <autoOutline />
      </content>
        <sections>
          <section address="VCardProperty">
            <title>Class VCardProperty&lt;T&gt;</title>
            <content>
              <para>The data model of the class <codeInline>VCard</codeInline> based on classes, that are derived from <codeInline>VCardProperty&lt;T&gt;</codeInline>.</para>
              <para><codeInline>VCardProperty&lt;T&gt;</codeInline> exposes the following data:</para>
              <code language="c#" source=".\Content\VCardProperty.cs"/>

              <para>This reflects the structure of a data row in a *.vcf-file:</para>
              <para>
                <codeInline>group1.TEL;TYPE=home,voice;VALUE=uri:tel:+49-123-4567</codeInline>
              </para>
              <para>In this example corresponds</para>
              <list class="bullet">
                <listItem>
                  <para>
                    <codeInline>group1</codeInline> to <codeInline>VCardProperty&lt;T&gt;.Group</codeInline>,
                  </para>
                </listItem>
                <listItem>
                  <para>
                    <codeInline>TEL;TYPE=home,voice;VALUE=uri</codeInline> to <codeInline>VCardProperty&lt;T&gt;.Parameters</codeInline> and
                  </para>
                </listItem>
                <listItem>
                  <para>
                    <codeInline>tel:+49-123-4567</codeInline> to <codeInline>VCardProperty&lt;T&gt;.Value</codeInline>.
                  </para>
                </listItem>
              </list>
            </content>
          </section>
          <section address="NamingConventions">
            <title>Naming Conventions</title>
            <content>
              <para>Most properties of class <codeInline>VCard</codeInline> are collections. It has to do with, that many properties are allowed to have more than one
              instance per vCard (e.g. phone numbers, e-mail addresses). Such properties are named in Plural.</para>
              <para>A special feature are properties whose name ends with "Views": These are properties, which actually is only one instance allowed, but
              vCard 4.0 enables you to have different versions of that single instance (e.g. in different languages). You must set the same <codeInline>AltID</codeInline> parameter
              on each of these versions.</para>
            </content>
          </section>
        </sections>
      
    </section>

    <relatedTopics></relatedTopics>
				
	</developerConceptualDocument>
</topic>
