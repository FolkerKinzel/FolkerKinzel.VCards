<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>FolkerKinzel.VCards</name>
  </assembly>
  <members>
    <member name="T:FolkerKinzel.VCards.Extensions.AddressTypesExtension">
      <summary>Extension methods that make working with the <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> enum easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.AddressTypesExtension.Set(System.Nullable{FolkerKinzel.VCards.Models.Enums.AddressTypes},FolkerKinzel.VCards.Models.Enums.AddressTypes)">
      <summary>Sets all the flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value to which all the flags set in <paramref name="flags" /> are added.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> values.</param>
      <returns>A value, which has all flags set that are set in <paramref name="value" /> and <paramref name="flags" />. If <paramref name="value" /> is <c>null</c>, <paramref name="flags" /> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.AddressTypesExtension.IsSet(System.Nullable{FolkerKinzel.VCards.Models.Enums.AddressTypes},FolkerKinzel.VCards.Models.Enums.AddressTypes)">
      <summary>Checks whether all flags set in <paramref name="flags" /> are also set in <paramref name="value" />.</summary>
      <param name="value">The value, which is checked to see whether all flags set in <paramref name="flags" /> are set on it.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> values.</param>
      <returns>Returns <c>true</c>, if all flags set in <paramref name="flags" /> are also set in <paramref name="value" />. If <paramref name="value" /> is <c>null</c>, <c>false</c> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.AddressTypesExtension.Unset(System.Nullable{FolkerKinzel.VCards.Models.Enums.AddressTypes},FolkerKinzel.VCards.Models.Enums.AddressTypes)">
      <summary>Unsets all flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value from which the flags set in <paramref name="flags" /> are removed.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.AddressTypes" /> values.</param>
      <returns>A value from which all the flags set in <paramref name="flags" /> are removed, respectively <c>null</c> if all flags are unset. If <paramref name="value" /> is <c>null</c>, <c>null</c> is returned.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Extensions.ImppTypesExtension">
      <summary>Extension methods that make working with the <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> enum easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.ImppTypesExtension.Set(System.Nullable{FolkerKinzel.VCards.Models.Enums.ImppTypes},FolkerKinzel.VCards.Models.Enums.ImppTypes)">
      <summary>Sets all the flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value to which all the flags set in <paramref name="flags" /> are added.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> values.</param>
      <returns>A value, which has all flags set that are set in <paramref name="value" /> and <paramref name="flags" />. If <paramref name="value" /> is <c>null</c>, <paramref name="flags" /> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.ImppTypesExtension.IsSet(System.Nullable{FolkerKinzel.VCards.Models.Enums.ImppTypes},FolkerKinzel.VCards.Models.Enums.ImppTypes)">
      <summary>Checks whether all flags set in <paramref name="flags" /> are also set in <paramref name="value" />.</summary>
      <param name="value">The value, which is checked to see whether all flags set in <paramref name="flags" /> are set on it.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> values.</param>
      <returns>Returns <c>true</c>, if all flags set in <paramref name="flags" /> are also set in <paramref name="value" />. If <paramref name="value" /> is <c>null</c>, <c>false</c> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.ImppTypesExtension.Unset(System.Nullable{FolkerKinzel.VCards.Models.Enums.ImppTypes},FolkerKinzel.VCards.Models.Enums.ImppTypes)">
      <summary>Unsets all flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value from which the flags set in <paramref name="flags" /> are removed.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.ImppTypes" /> values.</param>
      <returns>A value from which all the flags set in <paramref name="flags" /> are removed, respectively <c>null</c> if all flags are unset. If <paramref name="value" /> is <c>null</c>, <c>null</c> is returned.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Extensions.PropertyClassTypesExtension">
      <summary>Extension methods that make working with the <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> enum easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.PropertyClassTypesExtension.Set(System.Nullable{FolkerKinzel.VCards.Models.Enums.PropertyClassTypes},FolkerKinzel.VCards.Models.Enums.PropertyClassTypes)">
      <summary>Sets all the flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value to which all the flags set in <paramref name="flags" /> are added.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> values.</param>
      <returns>A value, which has all flags set that are set in <paramref name="value" /> and <paramref name="flags" />. If <paramref name="value" /> is <c>null</c>, <paramref name="flags" /> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.PropertyClassTypesExtension.IsSet(System.Nullable{FolkerKinzel.VCards.Models.Enums.PropertyClassTypes},FolkerKinzel.VCards.Models.Enums.PropertyClassTypes)">
      <summary>Checks whether all flags set in <paramref name="flags" /> are also set in <paramref name="value" />.</summary>
      <param name="value">The value, which is checked to see whether all flags set in <paramref name="flags" /> are set on it.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> values.</param>
      <returns>Returns <c>true</c>, if all flags set in <paramref name="flags" /> are also set in <paramref name="value" />. If <paramref name="value" /> is <c>null</c>, <c>false</c> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.PropertyClassTypesExtension.Unset(System.Nullable{FolkerKinzel.VCards.Models.Enums.PropertyClassTypes},FolkerKinzel.VCards.Models.Enums.PropertyClassTypes)">
      <summary>Unsets all flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value from which the flags set in <paramref name="flags" /> are removed.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes" /> values.</param>
      <returns>A value from which all the flags set in <paramref name="flags" /> are removed, respectively <c>null</c> if all flags are unset. If <paramref name="value" /> is <c>null</c>, <c>null</c> is returned.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Extensions.RelationTypesExtension">
      <summary>Extension methods that make working with the <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> enum easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.RelationTypesExtension.Set(System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},FolkerKinzel.VCards.Models.Enums.RelationTypes)">
      <summary>Sets all the flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value to which all the flags set in <paramref name="flags" /> are added.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values.</param>
      <returns>A value, which has all flags set that are set in <paramref name="value" /> and <paramref name="flags" />. If <paramref name="value" /> is <c>null</c>, <paramref name="flags" /> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.RelationTypesExtension.IsSet(System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},FolkerKinzel.VCards.Models.Enums.RelationTypes)">
      <summary>Checks whether all flags set in <paramref name="flags" /> are also set in <paramref name="value" />.</summary>
      <param name="value">The value, which is checked to see whether all flags set in <paramref name="flags" /> are set on it.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values.</param>
      <returns>Returns <c>true</c>, if all flags set in <paramref name="flags" /> are also set in <paramref name="value" />. If <paramref name="value" /> is <c>null</c>, <c>false</c> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.RelationTypesExtension.Unset(System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},FolkerKinzel.VCards.Models.Enums.RelationTypes)">
      <summary>Unsets all flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value from which the flags set in <paramref name="flags" /> are removed.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values.</param>
      <returns>A value from which all the flags set in <paramref name="flags" /> are removed, respectively <c>null</c> if all flags are unset. If <paramref name="value" /> is <c>null</c>, <c>null</c> is returned.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Extensions.TelTypesExtension">
      <summary>Extension methods that make working with the <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> enum easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.TelTypesExtension.Set(System.Nullable{FolkerKinzel.VCards.Models.Enums.TelTypes},FolkerKinzel.VCards.Models.Enums.TelTypes)">
      <summary>Sets all the flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value to which all the flags set in <paramref name="flags" /> are added.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> values.</param>
      <returns>A value, which has all flags set that are set in <paramref name="value" /> and <paramref name="flags" />. If <paramref name="value" /> is <c>null</c>, <paramref name="flags" /> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.TelTypesExtension.IsSet(System.Nullable{FolkerKinzel.VCards.Models.Enums.TelTypes},FolkerKinzel.VCards.Models.Enums.TelTypes)">
      <summary>Checks whether all flags set in <paramref name="flags" /> are also set in <paramref name="value" />.</summary>
      <param name="value">The value, which is checked to see whether all flags set in <paramref name="flags" /> are set on it.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> values.</param>
      <returns>Returns <c>true</c>, if all flags set in <paramref name="flags" /> are also set in <paramref name="value" />. If <paramref name="value" /> is <c>null</c>, <c>false</c> is returned.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.TelTypesExtension.Unset(System.Nullable{FolkerKinzel.VCards.Models.Enums.TelTypes},FolkerKinzel.VCards.Models.Enums.TelTypes)">
      <summary>Unsets all flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value from which the flags set in <paramref name="flags" /> are removed.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.TelTypes" /> values.</param>
      <returns>A value from which all the flags set in <paramref name="flags" /> are removed, respectively <c>null</c> if all flags are unset. If <paramref name="value" /> is <c>null</c>, <c>null</c> is returned.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Extensions.VCardCollectionExtension">
      <summary>Extension methods that make working with <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;VCard&gt;</see> objects easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.ReferenceVCards(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})">
      <summary>Returns a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which the <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects of the source collection are replaced with <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects and in which the formerly referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects are attached as separate elements.</summary>
      <param name="vCards">A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects. The collection may be empty or may contain <c>null</c> values.</param>
      <returns>A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which the <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects of the source collection are replaced with <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects  and in which the formerly referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects are attached as separate elements.
(If the attached <see cref="T:FolkerKinzel.VCards.VCard" /> objects did not yet have a <see cref="P:FolkerKinzel.VCards.VCard.UniqueIdentifier" /> property, the method automatically assignes them a new one.)</returns>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <note type="important">
Never use this method, if you want to save a VCF file as vCard 2.1 or vCard 3.0!
</note>
        <para>
The method is - if necessary - automatically called by the serialization methods of <see cref="T:FolkerKinzel.VCards.VCard" />. It only makes sense to use it in your own code, if a <see cref="T:FolkerKinzel.VCards.VCard" /> object is to be saved as vCard 4.0 and if each VCF file should only contain a single vCard. (As a rule, this approach is not advantageous as it endangers referential integrity.)
</para>
      </remarks>
      <example>
        <para>
The example demonstrates how a <see cref="T:FolkerKinzel.VCards.VCard" /> object can be saved as a vCard 4.0, if it is intended that a VCF file should only contain one single vCard. The example may also show that this approach is generally not advantageous, because it endangers referential integrity.
</para>
        <note type="note">
For the sake of easier readability, exception handling has not been used in the example.
</note>
        <code language="cs" source="..\Examples\VCard40Example.cs" />
      </example>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vCards" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.DereferenceVCards(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})">
      <summary>Returns a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects are replaced by <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects if the referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects had been part of the source collection.</summary>
      <param name="vCards">A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects. The collection may be empty or may contain <c>null</c> values.</param>
      <returns>A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects are replaced by <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects if the referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects had been part of the source collection.</returns>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <para>
The method is automatically called by the deserialization methods of the <see cref="T:FolkerKinzel.VCards.VCard" /> class. Using it in your own code can be useful, e.g., if <see cref="T:FolkerKinzel.VCards.VCard" /> objects from different sources are combined in a common list in order to make their data searchable.
</para>
      </remarks>
      <example>
        <para>
The example shows the deserialization and analysis of a VCF file whose content refers to other VCF files.
</para>
        <note type="note">
For the sake of easier readability, exception handling has not been used in the example.
</note>
        <code language="cs" source="..\Examples\VCard40Example.cs" />
      </example>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vCards" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.SaveVcf(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},System.String,FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.VcfOptions)">
      <summary>Saves a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in a common VCF file.</summary>
      <param name="vCards">The <see cref="T:FolkerKinzel.VCards.VCard" /> objects to be saved. The collection may be empty or  may contain <c>null</c> values. If the collection does not contain any <see cref="T:FolkerKinzel.VCards.VCard" /> object, no file will be written.</param>
      <param name="fileName">The file path. If the file exists, it will be overwritten.</param>
      <param name="version">The vCard version of the VCF file to be written.</param>
      <param name="options">Options for writing the VCF file. The flags can be combined.</param>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <para>
The method may serialize more vCards than were originally elements in <paramref name="vCardList" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are added to <paramref name="vCardList" /> by the method.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> or <paramref name="vCards" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is not a valid file path or <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.IO.IOException">The file could not be written.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.SerializeVcf(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},System.IO.Stream,FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.VcfOptions,System.Boolean)">
      <summary>Serializes a List of <see cref="T:FolkerKinzel.VCards.VCard" /> objects into a <see cref="T:System.IO.Stream" /> using the VCF format.</summary>
      <param name="vCards">The <see cref="T:FolkerKinzel.VCards.VCard" /> objects to be serialized. The collection may be empty or may contain <c>null</c> values.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> into which the serialized <see cref="T:FolkerKinzel.VCards.VCard" /> objects are written.</param>
      <param name="version">The vCard version used for the serialization.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <param name="leaveStreamOpen">
        <c>true</c> means that the method does not close the underlying <see cref="T:System.IO.Stream" />. The default value is <c>false</c>.</param>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <para>
The method may serialize more vCards than were originally elements in <paramref name="vCardList" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are added to <paramref name="vCardList" /> by the method.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="vCards" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> does not support write operations or <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.IO.IOException">I/O error.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="stream" /> was already closed.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.ToVcfString(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.VcfOptions)">
      <summary>Serializes <paramref name="vCards" /> as a <see cref="T:System.String" />, which represents the content of a VCF file.</summary>
      <param name="vCards">The <see cref="T:FolkerKinzel.VCards.VCard" /> objects to be serialized. The collection may be empty or may contain <c>null</c> values.</param>
      <param name="version">The vCard version used for the serialization.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <returns>
        <paramref name="vCards" />, serialized as a <see cref="T:System.String" />, which represents the content of a VCF file.</returns>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <para>
The method may serialize more vCards than were originally elements in <paramref name="vCardList" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are added to <paramref name="vCards" /> by the method.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vCards" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.OutOfMemoryException">The system is out of memory.</exception>
    </member>
    <member name="T:FolkerKinzel.VCards.Extensions.VcfOptionsExtension">
      <summary>Extension methods that make working with the <see cref="T:FolkerKinzel.VCards.VcfOptions" /> enum easier.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VcfOptionsExtension.Set(FolkerKinzel.VCards.VcfOptions,FolkerKinzel.VCards.VcfOptions)">
      <summary>Sets all the flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value to which all the flags set in <paramref name="flags" /> are added.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.VcfOptions" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.VcfOptions" /> values.</param>
      <returns>A value, which has all flags set that are set in <paramref name="value" /> and <paramref name="flags" />.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VcfOptionsExtension.IsSet(FolkerKinzel.VCards.VcfOptions,FolkerKinzel.VCards.VcfOptions)">
      <summary>Checks whether all flags set in <paramref name="flags" /> are also set in <paramref name="value" />.</summary>
      <param name="value">The value, which is checked to see whether all flags set in <paramref name="flags" /> are set on it.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.VcfOptions" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.VcfOptions" /> values.</param>
      <returns>Returns <c>true</c>, if all flags set in <paramref name="flags" /> are also set in <paramref name="value" />. If <paramref name="value" /> is <c>null</c>, <c>false</c> is returned. (If <paramref name="flags" /> is <see cref="F:FolkerKinzel.VCards.VcfOptions.None" />, <c>true</c> is only returned if <paramref name="value" /> is also <see cref="F:FolkerKinzel.VCards.VcfOptions.None" />. The same applies to <see cref="F:FolkerKinzel.VCards.VcfOptions.All" />.)</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Extensions.VcfOptionsExtension.Unset(FolkerKinzel.VCards.VcfOptions,FolkerKinzel.VCards.VcfOptions)">
      <summary>Unsets all flags set in <paramref name="flags" /> in <paramref name="value" />.</summary>
      <param name="value">The value from which the flags set in <paramref name="flags" /> are removed.</param>
      <param name="flags">A single <see cref="T:FolkerKinzel.VCards.VcfOptions" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.VcfOptions" /> values.</param>
      <returns>A value from which all the flags set in <paramref name="flags" /> are removed. If <paramref name="flags" /> is <see cref="F:FolkerKinzel.VCards.VcfOptions.All" />, <see cref="F:FolkerKinzel.VCards.VcfOptions.None" /> is returned.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Intls.Attributes.InternalProtectedAttribute">
      <summary />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Attributes.InternalProtectedAttribute.Run">
      <summary />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Base64Parser.ParseBase64(System.String)">
      <summary>Parses a Base64 <see cref="T:System.String" /> as byte array - even if it is in the Base64Url format (RFC 4648 § 5).</summary>
      <param name="base64">A Base64 or Base64Url <see cref="T:System.String" />.</param>
      <returns>A byte array containing the data that was encoded in <paramref name="base64" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="base64" /> is <c>null</c>.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="base64" /> has an invalid format.</exception>
    </member>
    <member name="T:FolkerKinzel.VCards.Intls.Converters.DateAndOrTimeConverter">
      <summary />
      <threadsafety static="true" instance="false" />
    </member>
    <member name="T:FolkerKinzel.VCards.Intls.Converters.TimeConverter">
      <summary />
      <threadsafety static="true" instance="false" />
    </member>
    <member name="T:FolkerKinzel.VCards.Intls.Deserializers.VcfRow">
      <summary />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Deserializers.VcfRow.#ctor(System.String,System.Int32,FolkerKinzel.VCards.Intls.Deserializers.VcfDeserializationInfo)">
      <summary>ctor</summary>
      <param name="vCardRow" />
      <param name="valueSeparatorIndex" />
      <param name="info" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Deserializers.VcfRow.Parse(System.String,FolkerKinzel.VCards.Intls.Deserializers.VcfDeserializationInfo)">
      <summary />
      <param name="vCardRow" />
      <param name="info" />
      <returns />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Deserializers.VcfRow.UnMask(FolkerKinzel.VCards.Models.Enums.VCdVersion)">
      <summary />
      <param name="version" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Deserializers.VcfRow.DecodeQuotedPrintable">
      <summary />
    </member>
    <member name="T:FolkerKinzel.VCards.Intls.Encodings.QuotedPrintable.QuotedPrintableConverter">
      <summary />
      <threadsafety static="true" instance="false" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Encodings.QuotedPrintable.QuotedPrintableConverter.Encode(System.String,System.Int32)">
      <summary />
      <param name="value" />
      <param name="firstLineOffset" />
      <returns />
      <exception cref="T:System.ArgumentOutOfRangeException" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Encodings.QuotedPrintable.QuotedPrintableConverter.Decode(System.String,System.Text.Encoding)">
      <summary />
      <remarks />
      <param name="qpCoded" />
      <param name="textEncoding" />
      <returns />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Encodings.QuotedPrintable.QuotedPrintableConverter.DecodeData(System.String)">
      <summary />
      <remarks />
      <param name="qpCoded" />
      <returns />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Extensions.IntExtension.ValidateID(System.Int32,System.String)">
      <summary />
      <param name="id" />
      <param name="idName" />
      <exception cref="T:System.ArgumentOutOfRangeException" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Extensions.StringBuilderExtension.RemoveQuotes(System.Text.StringBuilder)">
      <summary />
      <param name="builder" />
      <returns />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Extensions.StringExtension.NeedsToBeQpEncoded(System.String)">
      <summary />
      <param name="s" />
      <returns />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Serializers.EnumValueCollectors.AddressTypesCollector.CollectValueStrings(System.Nullable{FolkerKinzel.VCards.Models.Enums.AddressTypes},System.Collections.Generic.List{System.String})">
      <summary />
      <param name="addressType" />
      <param name="list" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Serializers.EnumValueCollectors.ImppTypesCollector.CollectValueStrings(System.Nullable{FolkerKinzel.VCards.Models.Enums.ImppTypes},System.Collections.Generic.List{System.String})">
      <summary />
      <param name="imppType" />
      <param name="list" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Serializers.EnumValueCollectors.PropertyClassTypesCollector.CollectValueStrings(System.Nullable{FolkerKinzel.VCards.Models.Enums.PropertyClassTypes},System.Collections.Generic.List{System.String})">
      <summary />
      <param name="propertyClassType" />
      <param name="list" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Serializers.EnumValueCollectors.RelationTypesCollector.CollectValueStrings(System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},System.Collections.Generic.List{System.String})">
      <summary />
      <param name="relationType" />
      <param name="list" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Serializers.EnumValueCollectors.TelTypesCollector.CollectValueStrings(System.Nullable{FolkerKinzel.VCards.Models.Enums.TelTypes},System.Collections.Generic.List{System.String})">
      <summary />
      <param name="telType" />
      <param name="list" />
    </member>
    <member name="M:FolkerKinzel.VCards.Intls.Serializers.ParameterSerializer.#ctor(FolkerKinzel.VCards.VcfOptions)">
      <summary />
      <param name="options" />
    </member>
    <member name="F:FolkerKinzel.VCards.Intls.Serializers.VcfSerializer.X_KADDRESSBOOK_X_SpouseName">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Intls.Serializers.VcfSerializer.X_KADDRESSBOOK_X_Anniversary">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Intls.Serializers.VcfSerializer.X_KADDRESSBOOK_X_IMAddress">
      <summary />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.AccessProperty">
      <summary>Encapsulates the data of the vCard property <c>CLASS</c>, which defines the level of confidentiality of the vCard in vCard 3.0.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AccessProperty.#ctor(FolkerKinzel.VCards.Models.AccessProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AccessProperty.#ctor(FolkerKinzel.VCards.Models.Enums.VCdAccess,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.AccessProperty" /> object.</summary>
      <param name="value">A member of the <see cref="T:FolkerKinzel.VCards.Models.Enums.VCdAccess" /> enum.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.AccessProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.AccessProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.AccessProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AccessProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AccessProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.AddressProperty">
      <summary>Encapsulates the data of a vCard property that contains information about the postal address.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AddressProperty.#ctor(FolkerKinzel.VCards.Models.AddressProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AddressProperty.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" /> object.</summary>
      <param name="street">The street address.</param>
      <param name="locality">The locality (e.g. city).</param>
      <param name="postalCode">The postal code.</param>
      <param name="region">The region (e.g. state or province).</param>
      <param name="country">The country name (full name).</param>
      <param name="postOfficeBox">The post office box. (Don't use this parameter!)</param>
      <param name="extendedAddress">The extended address (e.g. apartment or suite number).  (Don't use this parameter!)</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <remarks>It is recommended to assign a formatted representation of the address to the <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Label" /> parameter of the <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" /> object.</remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AddressProperty.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" /> object.</summary>
      <param name="street">The street address.</param>
      <param name="locality">The locality (e.g. city).</param>
      <param name="postalCode">The postal code.</param>
      <param name="region">The region (e.g. state or province).</param>
      <param name="country">The country name (full name).</param>
      <param name="postOfficeBox">The post office box. (Don't use this parameter!)</param>
      <param name="extendedAddress">The extended address (e.g. apartment or suite number).  (Don't use this parameter!)</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <remarks>It is recommended to assign a formatted representation of the address to the <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Label" /> parameter of the <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" /> object.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.AddressProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" />.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.AddressProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AddressProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.AddressProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.DataProperty">
      <summary>Encapsulates embedded binary data, references to binary data (e.g. URLs) or information available as free text.</summary>
      <remarks>
        <para>
The information can be in different formats:
</para>
        <list type="bullet">
          <item>
embedded binary data,
</item>
          <item>
references to binary data (e.g. urls) or
</item>
          <item>
information available as free text.
</item>
        </list>
        <note type="tip">
Use the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> class to embed binary data or free text, or to get this information back from the property.
</note>
      </remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataProperty.#ctor(FolkerKinzel.VCards.Models.DataProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataProperty.#ctor(System.Uri,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.DataProperty" /> object.</summary>
      <param name="value">A <see cref="T:System.Uri" />: Use the static methods of the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> class to pass embedded binary data or free text as <see cref="T:System.Uri" />.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DataProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.DataProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.DataUrl">
      <summary>Represents a data URL according to RFC 2397.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.DataUrl.UriSchemeData">
      <summary>Specifies that the <see cref="T:System.Uri" /> is a <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> according to RFC 2397. This field is read-only.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.DataUrl.SchemeDelimiter">
      <summary>Specifies the character that separate the communication protocol scheme from the address portion of the URI. This field is read-only.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.#ctor(System.String,FolkerKinzel.VCards.Models.PropertyParts.MimeType,FolkerKinzel.VCards.Models.Enums.DataEncoding)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> object.</summary>
      <param name="uriString">The <see cref="T:System.String" /> from which the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> is parsed.</param>
      <param name="mimeType">The MIME type of the embedded data or <c>null</c> for <c>text/plain;charset=US-ASCII</c>.</param>
      <param name="encoding">Specifies the encoding of the data embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is <c>null</c>.</exception>
      <exception cref="T:System.UriFormatException">
        <See cref="T:FolkerKinzel.VCards.Models.DataUrl" /> cannot be initialized, e.g. because <paramref name="uriString" /> is longer than 65519 characters.</exception>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DataUrl.MimeType">
      <summary>Returns the MIME type of the embedded data. (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DataUrl.Encoding">
      <summary>Returns the encoding of the embedded data.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DataUrl.EncodedData">
      <summary>Returns the embedded and encoded data as <see cref="T:System.String" />. (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DataUrl.ContainsText">
      <summary>
        <c>true</c> if the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> contains embedded text.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DataUrl.ContainsBytes">
      <summary>
        <c>true</c> if the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> contains embedded binary data.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.TryCreate(System.String,FolkerKinzel.VCards.Models.DataUrl@)">
      <summary>Creates a new <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />. Does not throw an exception, if the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> cannot be created.</summary>
      <param name="value">The string representation of the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />,  according to RFC 2397.</param>
      <param name="dataUrl">When this method returns and if the conversion succeeded, contains a <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> object. Contains <c>null</c> if the conversion failed.
This argument is passed uninitialized; any value originally supplied in <paramref name="dataUrl" /> will be overwritten.</param>
      <returns>
        <c>true</c> if <paramref name="dataUrl" /> was converted successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.FromText(System.String)">
      <summary>Generates a <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> to embed any text.</summary>
      <param name="text">The text to be embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />.</param>
      <returns>A <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />, which holds embedded text.</returns>
      <exception cref="T:System.FormatException">
        <See cref="T:FolkerKinzel.VCards.Models.DataUrl" /> cannot be initialized, e.g. because the URI string is longer than 65519 characters.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.FromBytes(System.Byte[],System.String)">
      <summary>Generates a <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> to embed binary data.</summary>
      <param name="bytes">The binary data to be embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />.</param>
      <param name="mimeType">The MIME type of the data contained in <paramref name="bytes" /> or <c>null</c> for "text/plain;charset=US-ASCII".</param>
      <returns>A <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />, which holds the binary data supplied by <paramref name="bytes" />.</returns>
      <exception cref="T:System.UriFormatException">A <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> cannot be initialized, e.g. because the resulting URI string is longer than 65519 characters.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.FromFile(System.String,System.String)">
      <summary>Creates a <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> from an existing file.</summary>
      <param name="path">Absolute path to the file whose content is to be embedded.</param>
      <param name="mimeType">MIME type of the file to be embedded. If <c>null</c> is specified, an attempt is made to determine the MIME type automatically from the file extension.</param>
      <returns>A <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />, which holds the binary data of the file referenced by <paramref name="path" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is not a valid file path or <paramref name="mimeType" /> is not in a valid format.</exception>
      <exception cref="T:System.UriFormatException">A <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> cannot be initialized, e.g. because the resulting URI string is longer than 65519 characters.</exception>
      <exception cref="T:System.IO.IOException">I/O error.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.GetEmbeddedText">
      <summary>Returns the text embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> or <c>null</c>, if the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> contains embedded binary data.</summary>
      <returns>The embedded text or <c>null</c>.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.GetEmbeddedBytes">
      <summary>Returns the binary data embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> or <c>null</c>, if the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> contains embedded text.</summary>
      <returns>The embedded binary data or <c>null</c>.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.GetFileExtension">
      <summary>Returns a suitable file type extension for the data embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" />.</summary>
      <returns>A suitable file type extension for the data embedded in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> (including the period ".").</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DataUrl.LoadFile(System.String)">
      <summary />
      <param name="path" />
      <returns />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.ArgumentException" />
      <exception cref="T:System.IO.IOException" />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.DateTimeOffsetProperty">
      <summary>A class derived from <see cref="T:FolkerKinzel.VCards.Models.DateTimeProperty" /> that specializes in encapsulating <see cref="T:System.DateTimeOffset" /> values.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeOffsetProperty.#ctor(FolkerKinzel.VCards.Models.DateTimeOffsetProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeOffsetProperty.#ctor(System.Nullable{System.DateTimeOffset},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.DateTimeOffsetProperty" /> object in which the <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.DataType" /> parameter is set to <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.DateAndOrTime" />.</summary>
      <param name="value">An instance of the <see cref="T:System.DateTimeOffset" /> struct or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DateTimeOffsetProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.DateTimeOffsetProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeOffsetProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeOffsetProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.DateTimeProperty">
      <summary>Encapsulates information about time and date.</summary>
      <remarks>The information can be in various formats. E.g. in vCard 4.0 also free text such as "Tuesdays after midnight" is possible . The <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.DataType">Parameters.DataType</see> property is helpful, to find out what type of data the <see cref="T:FolkerKinzel.VCards.Models.DateTimeProperty" /> contains.</remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeProperty.#ctor(FolkerKinzel.VCards.Models.DateTimeProperty)">
      <summary>Copy constructor.</summary>
      <param name="prop">The <see cref="T:FolkerKinzel.VCards.Models.DateTimeProperty" /> object to clone.</param>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeProperty.#ctor(FolkerKinzel.VCards.Models.PropertyParts.ParameterSection,System.String)">
      <summary>Constructor that allows derived classes to initialize a new <see cref="T:FolkerKinzel.VCards.Models.DateTimeProperty" /> object.</summary>
      <param name="parameters">A <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> object that represents the parameter part of a vCard property.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.DateTimeTextProperty">
      <summary>Specialization of the <see cref="T:FolkerKinzel.VCards.Models.DateTimeProperty" /> class, which allows a time and/or date to be saved as free text.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeTextProperty.#ctor(FolkerKinzel.VCards.Models.DateTimeTextProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeTextProperty.#ctor(System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.DateTimeTextProperty" /> object in which the <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.DataType" /> parameter is set to <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Text" />.</summary>
      <param name="value">Any <see cref="T:System.String" /> describing a time or date, or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.DateTimeTextProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.DateTimeTextProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeTextProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.DateTimeTextProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.AddressTypes">
      <summary>Named constants to describe the type of a postal address in vCards. The constants can be combined.</summary>
      <remarks>
        <note type="tip"> When working with the enum use the extension methods from the <see cref="T:FolkerKinzel.VCards.Extensions.AddressTypesExtension" /> class. </note>
      </remarks>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.AddressTypes.Dom">
      <summary>
        <c>DOM</c>: Domestic delivery address</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.AddressTypes.Intl">
      <summary>
        <c>INTL</c>: International delivery address</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.AddressTypes.Postal">
      <summary>
        <c>POSTAL</c>: Postal delivery address</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.AddressTypes.Parcel">
      <summary>
        <c>PARCEL</c>: Parcel delivery address</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.DataEncoding">
      <summary>Named constants to specify the encoding of the embedded data in the <see cref="T:FolkerKinzel.VCards.Models.DataUrl" /> class.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.DataEncoding.UrlEncoded">
      <summary>URL encoded</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.DataEncoding.Base64">
      <summary>Base64 encoded</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.EmailType">
      <summary>Named constants to describe the type of an email address.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.EmailType.SMTP">
      <summary>Internet addressing type</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.EmailType.X400">
      <summary>X.400 addressing type (e.g. "BusinessMail X.400")</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.ExpertiseLevel">
      <summary>Named constants to specify the parameter <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.ExpertiseLevel" /> in the property <see cref="P:FolkerKinzel.VCards.VCard.Expertises">VCard.Expertises</see>. <c>(RFC 6715)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.ExpertiseLevel.Beginner">
      <summary>Beginner</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.ExpertiseLevel.Average">
      <summary>Average</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.ExpertiseLevel.Expert">
      <summary>Expert</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.ImppTypes">
      <summary>Named constants to specify the type of an instant messenger handle in vCard 3.0. The constants can be combined.</summary>
      <remarks>
        <note type="tip"> When working with the enum use the extension methods from the <see cref="T:FolkerKinzel.VCards.Extensions.ImppTypesExtension" /> class. </note>
      </remarks>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.ImppTypes.Personal">
      <summary>Personal</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.ImppTypes.Business">
      <summary>Business</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.ImppTypes.Mobile">
      <summary>Mobile</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.InterestLevel">
      <summary>Named constants to specify the parameter <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.InterestLevel" /> in the properties <see cref="P:FolkerKinzel.VCards.VCard.Hobbies">VCard.Hobbies</see> and <see cref="P:FolkerKinzel.VCards.VCard.Interests">VCard.Interests</see>. <c>(RFC 6715)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.InterestLevel.High">
      <summary>High</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.InterestLevel.Medium">
      <summary>Medium</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.InterestLevel.Low">
      <summary>Low</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes">
      <summary>Named constants to classify the scope of a vCard property. The constants can be combined.</summary>
      <remarks>
        <note type="tip"> When working with the enum use the extension methods from the <see cref="T:FolkerKinzel.VCards.Extensions.PropertyClassTypesExtension" /> class. </note>
      </remarks>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes.Home">
      <summary>
        <c>HOME</c>: Implies that the property is related to an individual's personal life.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.PropertyClassTypes.Work">
      <summary>
        <c>WORK</c>: Implies that the property is related to an individual's work place.</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.RelationTypes">
      <summary>Named constants to describe the type of relationship with a person or organization. The constants can be combined.</summary>
      <remarks>
        <note type="tip"> When working with the enum use the extension methods from the <see cref="T:FolkerKinzel.VCards.Extensions.RelationTypesExtension" /> class. </note>
      </remarks>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Contact">
      <summary>
        <c>CONTACT</c>: Someone you know how to get in touch with. Often symmetric.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Acquaintance">
      <summary>
        <c>ACQUAINTANCE</c>: Someone who you have exchanged greetings and not much (if any) more — maybe a short conversation or two. Often symmetric.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Friend">
      <summary>
        <c>FRIEND</c>: Someone you are a friend to. A compatriot, buddy, home(boy|girl) that you know. Often symmetric.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Met">
      <summary>
        <c>MET</c>: Someone who you have actually met in person. Symmetric.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.CoWorker">
      <summary>
        <c>CO-WORKER</c>: Someone a person works with, or works at the same organization as. Symmetric. Usually transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Colleague">
      <summary>
        <c>COLLEAGUE</c>: Someone in the same field of study/activity. Symmetric. Often transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.CoResident">
      <summary>
        <c>CO-RESIDENT</c>: Someone you share a street address with. Symmetric and transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Neighbor">
      <summary>
        <c>NEIGHBOR</c>: Someone who lives nearby, perhaps only at an adjacent street address or doorway. Symmetric. Often transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Child">
      <summary>
        <c>CHILD</c>: A person's genetic offspring, or someone that a person has adopted and takes care of. Inverse is parent.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Parent">
      <summary>
        <c>PARENT</c>: Inverse of child.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Sibling">
      <summary>
        <c>SIBLING</c>:  Someone a person shares a parent with. Symmetric. Usually transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Spouse">
      <summary>
        <c>SPOUSE</c>: Someone you are married to. Symmetric. Not transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Kin">
      <summary>
        <c>KIN</c>: A relative, someone you consider part of your extended family. Symmetric and typically transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Muse">
      <summary>
        <c>MUSE</c>: Someone who brings you inspiration. No inverse.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Crush">
      <summary>
        <c>CRUSH</c>: Someone you have a crush on. No inverse.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Date">
      <summary>
        <c>DATE</c>: Someone you are dating. Symmetric. Not transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Sweetheart">
      <summary>
        <c>SWEETHEART</c>: Someone with whom you are intimate and at least somewhat committed, typically exclusively. Symmetric. Not transitive.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Me">
      <summary>
        <c>ME</c>: A link to yourself at a different URL. Exclusive of all other XFN values. Required symmetric. There is an implicit "me" relation from the contents of a directory to the directory itself.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent">
      <summary>
        <c>AGENT</c>: An entity who may sometimes act on behalf of the entity
         associated with the vCard.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Emergency">
      <summary>
        <c>EMERGENCY</c>: Indicates an emergency contact.</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.TelTypes">
      <summary>Named constants to describe the type of a phone number in vCards. The constants can be combined.</summary>
      <remarks>
        <note type="tip"> When working with the enum use the extension methods from the <see cref="T:FolkerKinzel.VCards.Extensions.TelTypesExtension" /> class. </note>
      </remarks>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Voice">
      <summary>
        <c>VOICE</c>: Indicates a voice telephone number. (Default). <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Fax">
      <summary>
        <c>FAX</c>: Indicates a facsimile telephone number. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Msg">
      <summary>
        <c>MSG</c>: Indicates that the telephone number has voice messaging support. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Cell">
      <summary>
        <c>CELL</c>: Indicates a cellular or mobile telephone number.  <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Pager">
      <summary>
        <c>PAGER</c>: Indicates a paging device telephone number.  <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.BBS">
      <summary>
        <c>BBS</c>: Indicates a bulletin board system telephone number. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Modem">
      <summary>
        <c>MODEM</c>: Indicates a MODEM connected telephone number. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Car">
      <summary>
        <c>CAR</c>: Indicates a car-phone telephone number.<c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.ISDN">
      <summary>
        <c>ISDN</c>: Indicates an ISDN service telephone number. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Video">
      <summary>
        <c>VIDEO</c>: Indicates a video conferencing telephone number. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.PCS">
      <summary>
        <c>PCS</c>: Indicates a personal communication services telephone number. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.TextPhone">
      <summary>
        <c>TEXTPHONE</c>: Indicates a telecommunication device for people with hearing or speech difficulties. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.TelTypes.Text">
      <summary>
        <c>TEXT</c>: Indicates that the telephone number supports text messages (SMS). <c>(4)</c></summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdAccess">
      <summary>Named constants to indicate in vCard 3.0 which level of confidentiality applies to the vCard.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdAccess.Public">
      <summary>Public</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdAccess.Private">
      <summary>Private</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdAccess.Confidential">
      <summary>Confidential</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdContentLocation">
      <summary>Named constants to indicate in vCard 2.1 where the content of a vCard property is located.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdContentLocation.Inline">
      <summary>
        <c>INLINE</c>: The location of the property value is inline with the property. (Default)</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdContentLocation.ContentID">
      <summary>
        <c>Content-ID</c>, <c>CID</c>: In the case of the vCard being transported within a MIME email message, the property value can be specified as being located in a separate MIME entity with the “Content-ID” value, or “CID” for short. In this case, the property value is the Content-ID for the MIME entity containing the property value.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdContentLocation.Url">
      <summary>
        <c>URL</c>: The property value is specified as being located out on the network within some Internet resource. In this case, the property value is the Uniform Resource Locator for the Internet resource containing the property value.</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdDataType">
      <summary>Named constants to specify the data type of the value of a vCard property.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Text">
      <summary>
        <c>TEXT</c>: Values that contain human-readable text. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Uri">
      <summary>
        <c>URI</c>: Values that are referenced by a Uniform Resource Identifier (URI) instead of encoded in-line. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Date">
      <summary>
        <c>DATE</c>: A calendar date. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Time">
      <summary>
        <c>TIME</c>: A time of day. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.DateTime">
      <summary>
        <c>DATE-TIME</c>: A date and time of day combination. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.DateAndOrTime">
      <summary>
        <c>DATE-AND-OR-TIME</c>: Either a <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.DateTime" />, a <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Date" />, or a <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Time" /> value. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.TimeStamp">
      <summary>
        <c>TIMESTAMP</c>: A complete date and time of day combination as specified in
   [ISO.8601.2004], Section 4.3.2. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Boolean">
      <summary>
        <c>BOOLEAN</c>: A boolean value. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Integer">
      <summary>
        <c>INTEGER</c>: Signed integer values in decimal format. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Float">
      <summary>
        <c>FLOAT</c>: Real numbers. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.UtcOffset">
      <summary>
        <c>UTC-OFFSET</c>: The value is a signed offset from UTC. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.LanguageTag">
      <summary>
        <c>LANGUAGE-TAG</c>: A single language tag, as defined in RFC 5646. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.Binary">
      <summary>
        <c>BINARY</c>: The value is inline, Base64-encoded binary data. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.PhoneNumber">
      <summary>
        <c>PHONE-NUMBER</c>: The value is a telephone number. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.VCard">
      <summary>
        <c>VCARD</c>: The value is another embedded vCard. <c>(3)</c></summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdEncoding">
      <summary>Named constants to specify the encoding of the value of a vCard property.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdEncoding.Base64">
      <summary>
        <c>B</c>, <c>BASE64</c>: Base64 <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdEncoding.QuotedPrintable">
      <summary>
        <c>QUOTED-PRINTABLE</c>: Quoted Printable <c>(2)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdEncoding.Ansi">
      <summary>
        <c>8BIT</c>: 8-Bit charset <c>(2)</c></summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdKind">
      <summary>Named Constants to specify the type of object the vCard represents.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Individual">
      <summary>
        <c>INDIVIDUAL</c>: The vCard represents a single person or entity. (Default) <c>4</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Group">
      <summary>
        <c>GROUP</c>: The vCard represents a group of persons or entities. <c>4</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Organization">
      <summary>
        <c>ORGANIZATION</c>: The vCard represents an organization. <c>4</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Location">
      <summary>
        <c>LOCATION</c>: The vCard represents a named geographical place. <c>4</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Application">
      <summary>
        <c>APPLICATION</c>: The vCard represents a software application such as a server, an online service  (e.g., a chat room), or an automated software bot. <c>(4 - RFC 6473)</c></summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdProp">
      <summary>Named constants to access the properties of a <see cref="T:FolkerKinzel.VCards.VCard" /> object.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Profile">
      <summary>
        <c>PROFILE</c>: States that the vCard is a vCard. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Kind">
      <summary>
        <c>KIND</c>: Defines the type of entity, that this vCard represents. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.TimeStamp">
      <summary>
        <c>REV</c>: A timestamp for the last time the vCard was updated. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.UniqueIdentifier">
      <summary>
        <c>UID</c>: Specifies a value that represents a persistent, globally unique identifier, associated with the object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Categories">
      <summary>
        <c>CATEGORIES</c>: Lists of "tags" that can be used to describe the object represented by this vCard. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.TimeZones">
      <summary>
        <c>TZ</c>: The time zone(s) of the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.GeoCoordinates">
      <summary>
        <c>GEO</c>: Specifies latitudes and longitudes. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Access">
      <summary>
        <c>CLASS</c>: Describes the sensitivity of the information in the vCard. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Sources">
      <summary>
        <c>SOURCE</c>: URLs that can be used to get the latest version of this vCard.<c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.DirectoryName">
      <summary>
        <c>NAME</c>: 
            Provides a textual representation of the <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Sources" /> property. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Mailer">
      <summary>
        <c>MAILER</c>: Type of email program used. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.ProdID">
      <summary>
        <c>PRODID</c>: The identifier for the product that created the vCard object. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.DisplayNames">
      <summary>
        <c>FN</c>: The formatted name string associated with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.NameViews">
      <summary>
        <c>N</c>: A structured representation of the name of the person, place or thing associated with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.GenderViews">
      <summary>
        <c>GENDER</c>: Defines the person's gender. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.NickNames">
      <summary>
        <c>NICKNAME</c>: One or more descriptive/familiar names for the object represented by this vCard. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Titles">
      <summary>
        <c>TITLE</c>: Specifies the job title, functional position or function of the individual, associated with the vCard object, within an organization. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Roles">
      <summary>
        <c>ROLE</c>: The role, occupation, or business category of the vCard object within an organization. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Organizations">
      <summary>
        <c>ORG</c>: The name and optionally the unit(s) of the organization associated with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.BirthDayViews">
      <summary>
        <c>BDAY</c>: Date of birth of the individual associated with the vCard. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.BirthPlaceViews">
      <summary>
        <c>BIRTHPLACE</c>: The location of the individual's birth. <c>(4 - RFC 6474)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.AnniversaryViews">
      <summary>
        <c>ANNIVERSARY</c>: Defines the person's anniversary. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.DeathDateViews">
      <summary>
        <c>DEATHDATE</c>: The individual's time of death. <c>(4 - RFC 6474)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.DeathPlaceViews">
      <summary>
        <c>DEATHPLACE</c>: The location of the individual's death. <c>(4 - RFC 6474)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Addresses">
      <summary>
        <c>ADR</c>: A structured representation of the physical delivery address for the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.PhoneNumbers">
      <summary>
        <c>TEL</c>: Canonical number strings for a telephone numbers for telephony communication with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.EmailAddresses">
      <summary>
        <c>EMAIL</c>: The addresses for electronic mail communication with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.URLs">
      <summary>
        <c>URL</c>: URLs, pointing to websites that represent the person in some way. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.InstantMessengerHandles">
      <summary>
        <c>IMPP</c>: List of instant messenger handles. <c>(3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Keys">
      <summary>
        <c>KEY</c>: Public encryption keys associated with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.CalendarAddresses">
      <summary>
        <c>CALURI</c>: URLs to the person's calendar. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.CalendarUserAddresses">
      <summary>
        <c>CALADRURI</c>: URLs to use for sending a scheduling request to the person's calendar. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.FreeOrBusyUrls">
      <summary>
        <c>FBURL</c>: Defines URLs that show when the person is "free" or "busy" on their calendar. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Relations">
      <summary>
        <c>RELATED</c>: Other entities that the person is related to. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Members">
      <summary>
        <c>MEMBER</c>: Defines a member that is part of the group that this vCard represents. 
The <see cref="P:FolkerKinzel.VCards.VCard.Kind" />-property must be set to <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Group" /> in order to use this property.  <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.OrgDirectories">
      <summary>
        <c>ORG-DIRECTORY</c>: A URI representing the person's work place, which can be used to look up information on the person's co-workers. <c>(RFC 6715)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Expertises">
      <summary>
        <c>EXPERTISE</c>: A professional subject area, that the person has knowledge of. <c>(RFC 6715)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Interests">
      <summary>
        <c>INTEREST</c>: Recreational activities that the person is interested in, but does not necessarily take part in. <c>(4 - RFC 6715)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Hobbies">
      <summary>
        <c>HOBBY</c>: Recreational activities that the person actively engages in. <c>(4 - RFC 6715)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Languages">
      <summary>
        <c>LANG</c>: Defines languages that the person speaks. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Notes">
      <summary>
        <c>NOTE</c>: Specifies supplemental informations or comments, that are associated with the vCard. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.XmlProperties">
      <summary>
        <c>XML</c>: Any XML data that is attached to the vCard. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Logos">
      <summary>
        <c>LOGO</c>: Images or graphics of the logo of the organization that is associated with the individual to which the vCard belongs. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Photos">
      <summary>
        <c>PHOTO</c>: Image(s) or photograph(s) of the individual associated with the vCard. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Sounds">
      <summary>
        <c>SOUND</c>: Specifies the pronunciation of the <see cref="P:FolkerKinzel.VCards.VCard.DisplayNames" /> property of the <see cref="T:FolkerKinzel.VCards.VCard" />-object. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.PropertyIDMappings">
      <summary>
        <c>CLIENTPIDMAP</c>: Mappings for <see cref="T:FolkerKinzel.VCards.Models.PropertyID" />s. It is used for synchronizing different revisions of the same vCard. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdProp.NonStandardProperties">
      <summary>vCard-Properties that don't belong to the standard.</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdSex">
      <summary>Named Constants to specify the sex of the object the vCard represents.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdSex.Unknown">
      <summary>
        <c>U</c>: Unknown. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdSex.Female">
      <summary>
        <c>F</c>: Female. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdSex.Male">
      <summary>
        <c>M</c>: Male. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdSex.NonOrNotApplicable">
      <summary>
        <c>N</c>: None or not applicable. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdSex.Other">
      <summary>
        <c>O</c>: Other. <c>(4)</c></summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.Enums.VCdVersion">
      <summary>Named constants to indicate the VCF version.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdVersion.V2_1">
      <summary>vCard 2.1</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdVersion.V3_0">
      <summary>vCard 3.0</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.Enums.VCdVersion.V4_0">
      <summary>vCard 4.0</summary>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.GenderProperty">
      <summary>Represents the vCard property <c>GENDER</c>, introduced in vCard 4.0, which stores information to specify the components of the sex and gender identity of the object the vCard represents</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GenderProperty.#ctor(FolkerKinzel.VCards.Models.GenderProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GenderProperty.#ctor(System.Nullable{FolkerKinzel.VCards.Models.Enums.VCdSex},System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.GenderProperty" /> object.</summary>
      <param name="sex">Standardized information about the sex of a person.</param>
      <param name="genderIdentity">Free text describing the gender identity.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.GenderProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.GenderProperty" />.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.GenderProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GenderProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GenderProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.GeoCoordinate">
      <summary>Encapsulates information about the geographical position.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoCoordinate.#ctor(System.Double,System.Double)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.GeoCoordinate" /> object.</summary>
      <param name="latitude">Latitude (value between -90 and 90).</param>
      <param name="longitude">Longitude (value between -180 and 180).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="latitude" /> or <paramref name="longitude" /> does not have a valid value.</exception>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.GeoCoordinate.Latitude">
      <summary>Latitude.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.GeoCoordinate.Longitude">
      <summary>Longitude.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoCoordinate.Equals(FolkerKinzel.VCards.Models.GeoCoordinate)">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoCoordinate.Equals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoCoordinate.GetHashCode">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoCoordinate.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.GeoCoordinate" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.GeoCoordinate" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.GeoProperty">
      <summary>Represents the vCard property <c>GEO</c>, which encapsulates a geographic position.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoProperty.#ctor(FolkerKinzel.VCards.Models.GeoProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoProperty.#ctor(FolkerKinzel.VCards.Models.GeoCoordinate,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.GeoProperty" /> object.</summary>
      <param name="value">A <see cref="T:FolkerKinzel.VCards.Models.GeoCoordinate" /> object or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.GeoProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.GeoProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.GeoProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter">
      <summary>Defines a method that converts a <see cref="T:System.String" />, which represents a named time zone (IANA time zone ID), into a corresponding UTC offset.</summary>
      <remarks>
        <para>
The vCard 4.0 standard recommends specifying time zones as IANA time zone names. - Older standards (vCard 2.1, vCard 3.0), however, prefer UTC offsets.
</para>
        <para>
It is possible to convert IANA time zone names to UTC offsets, but it's not possible to convert UTC offsets to IANA time zone names because there is no unique assignment. It is therefore recommended to initialize <see cref="T:FolkerKinzel.VCards.Models.TimeZoneID" /> objects with IANA time zone names and then to convert these to UTC offsets using an implementation of <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />  when serializing a vCard 2.1 or a vCard 3.0.
</para>
        <para>
Since .NET cannot do the conversion up to .NET 5.0 itself, this interface enables a 3rd party library to be integrated.
</para>
      </remarks>
      <example>
        <note type="note">To make it easier to read, exception handling has been omitted in the following example.
</note>
        <para>
Example implementation for <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />:
</para>
        <code language="cs" source="..\Examples\TimeZoneIDConverter.cs" />
      </example>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.ITimeZoneIDConverter.TryConvertToUtcOffset(System.String,System.TimeSpan@)">
      <summary>Tries to convert a <see cref="T:System.String" />, which represents a time zone name (IANA time zone ID), into a UTC offset belonging to this time zone.</summary>
      <param name="timeZoneID">A <see cref="T:System.String" /> representing the name of a time zone.</param>
      <param name="utcOffset">Contains the UTC offset after the method has been successfully returned. The argument is passed uninitialized.</param>
      <returns>
        <c>true</c>, if <paramref name="timeZoneID" /> could be converted into a UTC offset, otherwise <c>false</c>.</returns>
      <remarks>
        <note type="implement">
          <para>
The method <see cref="M:FolkerKinzel.VCards.Models.ITimeZoneIDConverter.TryConvertToUtcOffset(System.String,System.TimeSpan@)" /> should at least be able to convert IANA time zone IDs into UTC offsets. (You could also convert POSIX time zone identifiers, for example.) It makes sense to use a 3rd party NuGet package for the task, as .NET is currently not able to do this itself.
</para>
          <para>
It is not necessary for the method to convert <see cref="T:System.String" />s that already represent a UTC offset, since the library <see cref="N:FolkerKinzel.VCards" /> already does this itself.
</para>
        </note>
      </remarks>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.KindProperty">
      <summary>Represents the <c>KIND</c> property, introduced in vCard 4.0, which describes the type of object represented by the vCard.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.KindProperty.#ctor(FolkerKinzel.VCards.Models.KindProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.KindProperty.#ctor(FolkerKinzel.VCards.Models.Enums.VCdKind,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.KindProperty" /> object.</summary>
      <param name="value">A member of the <see cref="T:FolkerKinzel.VCards.Models.Enums.VCdKind" /> enum.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.KindProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.KindProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.KindProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.KindProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.KindProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.NameProperty">
      <summary>Represents the vCard property <c>N</c>, which stores the name of the vCard subject.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NameProperty.#ctor(FolkerKinzel.VCards.Models.NameProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NameProperty.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.NameProperty" /> object.</summary>
      <param name="lastName">Family Name(s) (also known as surname(s))</param>
      <param name="firstName">Given Name(s) (first name(s))</param>
      <param name="middleName">Additional Name(s)</param>
      <param name="prefix">Honorific Prefix(es)</param>
      <param name="suffix">Honorific Suffix(es)</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NameProperty.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.NameProperty" /> object.</summary>
      <param name="lastName">Family Name (also known as surname)</param>
      <param name="firstName">Given Name (first name)</param>
      <param name="middleName">Additional Name</param>
      <param name="prefix">Honorific Prefix</param>
      <param name="suffix">Honorific Suffix</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.NameProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.NameProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NameProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.NameProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NameProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.NonStandardProperty">
      <summary>Represents a vCard property that is not defined by the official standards.</summary>
      <remarks>
        <note type="important">
          <para>
To write objects of the class <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> into a vCard, the flag <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteNonStandardProperties">VcfOptions.WriteNonStandardProperties</see> must be set explicitly.
</para>
          <para>
Please note that when using the class, yourself is responsible for the standard-compliant masking, unmasking, encoding and decoding of the data.
</para>
        </note>
      </remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NonStandardProperty.#ctor(FolkerKinzel.VCards.Models.NonStandardProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NonStandardProperty.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> object.</summary>
      <param name="propertyKey">The key ("name") of the non-standard vCard property (format: <c>X-NAME</c>).</param>
      <param name="value">The value of the vCard property: any data encoded as <see cref="T:System.String" /> or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyKey" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyKey" /> is not a valid X-NAME.</exception>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.NonStandardProperty.PropertyKey">
      <summary>The key ("name") of the vCard property.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.NonStandardProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> (raw <see cref="T:System.String" /> data).</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NonStandardProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NonStandardProperty.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> object.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.NonStandardProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.OrganizationProperty">
      <summary>Represents the vCard property <c>ORG</c>, which stores information about the organization to which the vCard object is associated.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.OrganizationProperty.#ctor(FolkerKinzel.VCards.Models.OrganizationProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.OrganizationProperty.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.OrganizationProperty" /> object.</summary>
      <param name="organizationName">Organization name or <c>null</c>.</param>
      <param name="organizationalUnits">Organization unit(s) or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.OrganizationProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.OrganizationProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.OrganizationProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.OrganizationProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.OrganizationProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.ProfileProperty">
      <summary>Represents the vCard 3.0 property <c>PROFILE</c>, which specifies that the vCard is a vCard.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.ProfileProperty.#ctor(FolkerKinzel.VCards.Models.ProfileProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.ProfileProperty.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.ProfileProperty" /> object.</summary>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.ProfileProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.ProfileProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.ProfileProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyID">
      <summary>Encapsulates information that is used to uniquely identify an instance of a <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.#ctor(System.Int32,FolkerKinzel.VCards.Models.PropertyIDMapping)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object with the local ID of the vCard property and - optionally - a <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object that allows the identification of the vCard property across different version states of the same vCard.</summary>
      <param name="id">The local ID of the vCard property.</param>
      <param name="mapping">A <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object or <c>null</c>.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> is less than 1 or greater than 9.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.#ctor(System.Int32,System.Nullable{System.Int32})">
      <summary />
      <param name="id" />
      <param name="mapping" />
      <exception cref="T:System.ArgumentOutOfRangeException" />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyID.ID">
      <summary>Gets the local ID of the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> to which the <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object is assigned.</summary>
      <remarks>The local key for identifying a <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> object consists of the name of the vCard property to which this object is assigned and the value of the <see cref="P:FolkerKinzel.VCards.Models.PropertyID.ID" /> of the <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object, which is assigned to this <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> object.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyID.Mapping">
      <summary>Gets the <see cref="P:FolkerKinzel.VCards.Models.PropertyIDMapping.ID" /> of the <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object with which the <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object is connected, or <c>null</c> if the <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object is not connected with any <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.Equals(System.Object)">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.Equals(FolkerKinzel.VCards.Models.PropertyID)">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.GetHashCode">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.op_Equality(FolkerKinzel.VCards.Models.PropertyID,FolkerKinzel.VCards.Models.PropertyID)">
      <summary>Compares two <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> objects. The result indicates whether the values of the two <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> objects are equal.</summary>
      <param name="pid1">A <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object to compare.</param>
      <param name="pid2">A <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object to compare.</param>
      <returns>
        <c>true</c> if the values of the two <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> objects are equal, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.op_Inequality(FolkerKinzel.VCards.Models.PropertyID,FolkerKinzel.VCards.Models.PropertyID)">
      <summary>Compares two <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> objects. The result indicates whether the values of the two <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> objects are not equal.</summary>
      <param name="pid1">A <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object to compare.</param>
      <param name="pid2">A <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object to compare.</param>
      <returns>
        <c>true</c> if the values of the two <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> objects are not equal, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyID.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyID" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyIDMapping">
      <summary>Connects the local <see cref="P:FolkerKinzel.VCards.Models.PropertyID.Mapping" /> of a <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> with a <see cref="T:System.Uri" />, which uniquely identifies the vCard property across different versions of the same vCard.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMapping.#ctor(System.Int32,System.Uri)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object.</summary>
      <param name="id">Local ID of the mapping (value: between 1 and 9).</param>
      <param name="mapping">A <see cref="T:System.Uri" /> that uniquely identifies the vCard property across different versions of the same vCard.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> is less than 1 or greater than 9.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapping" /> is <c>null</c>.</exception>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyIDMapping.ID">
      <summary>Gets the Local ID of the mapping.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyIDMapping.Mapping">
      <summary>Gets the <see cref="T:System.Uri" /> that serves as a cross-platform identifier for the mapping.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMapping.Parse(System.String)">
      <summary />
      <param name="s" />
      <returns />
      <exception cref="T:System.ArgumentException" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMapping.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyIDMappingProperty">
      <summary>Encapsulates information that is used to identify vCard properties across different versions of the same vCard.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMappingProperty.#ctor(FolkerKinzel.VCards.Models.PropertyIDMappingProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMappingProperty.#ctor(FolkerKinzel.VCards.Models.PropertyIDMapping)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMappingProperty" /> object.</summary>
      <param name="value">A <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMapping" /> object or <c>null</c>.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than 1 or greater than 9.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMappingProperty.#ctor(FolkerKinzel.VCards.Intls.Deserializers.VcfRow)">
      <summary />
      <param name="vcfRow" />
      <exception cref="T:System.ArgumentException" />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyIDMappingProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.PropertyIDMappingProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMappingProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyIDMappingProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyParts.Address">
      <summary>Encapsulates information about a postal delivery address.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Address.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary />
      <param name="street" />
      <param name="locality" />
      <param name="postalCode" />
      <param name="region" />
      <param name="country" />
      <param name="postOfficeBox" />
      <param name="extendedAddress" />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.PostOfficeBox">
      <summary>The post office box. (Don't use this property!)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.ExtendedAddress">
      <summary>The extended address (e.g. apartment or suite number).  (Don't use this property!)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.Street">
      <summary>The street address. (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.Locality">
      <summary>The locality (e.g. city).  (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.Region">
      <summary>The region (e.g. state or province).  (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.PostalCode">
      <summary>The postal code. (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.Country">
      <summary>The country name (full name).  (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Address.IsEmpty">
      <summary>Returns <c>true</c>, if the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Address" /> object does not contain any usable data.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Address.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Address" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Address" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyParts.Gender">
      <summary>Encapsulates information to specify the components of the sex and gender identity of the object the vCard represents</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Gender.#ctor(System.Nullable{FolkerKinzel.VCards.Models.Enums.VCdSex},System.String)">
      <summary>Initializes <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Gender" /> object.</summary>
      <param name="sex">Standardized information about the sex of a person.</param>
      <param name="genderIdentity">Free text describing the gender identity.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Gender.Sex">
      <summary>Standardized information about the sex of a person.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Gender.GenderIdentity">
      <summary>Free text describing the gender identity.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Gender.IsEmpty">
      <summary>Returns <c>true</c>, if the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Gender" /> object does not contain any usable data.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Gender.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Gender" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Gender" /> object. (For debugging only.)</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyParts.MimeType">
      <summary>Encapsulates information about a MIME type ("Multipurpose Internet Mail Extensions").</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.MimeType.MediaType">
      <summary>Internet Media Type (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.MimeType.Parameters">
      <summary>Parameters</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.MimeType.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.MimeType" /> object. (For debugging only.)</summary>
      <returns>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.MimeType" /> object. (For debugging only.)</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyParts.Name">
      <summary>Encapsulates information about the name of the person the vCard represents.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Name.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary />
      <param name="lastName" />
      <param name="firstName" />
      <param name="middleName" />
      <param name="prefix" />
      <param name="suffix" />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Name.LastName">
      <summary>Family Name(s) (also known as surname(s)) (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Name.FirstName">
      <summary>Given Name(s) (first name(s)) (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Name.MiddleName">
      <summary>Additional Name(s) (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Name.Prefix">
      <summary>Honorific Prefix(es) (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Name.Suffix">
      <summary>Honorific Suffix(es) (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Name.IsEmpty">
      <summary>Returns <c>true</c>, if the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Name" /> object does not contain any usable data.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Name.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Name" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Name" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyParts.Organization">
      <summary>Encapsulates information about the organization (or company) of the subject the vCard represents.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Organization.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Organization" /> object.</summary>
      <param name="organizationName">Organization name.</param>
      <param name="organizationalUnits">Organizational unit name(s).</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Organization.OrganizationName">
      <summary>Organization name.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Organization.OrganizationalUnits">
      <summary>Organizational unit name(s).</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.Organization.IsEmpty">
      <summary>Returns <c>true</c>, if the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Organization" /> object does not contain any usable data.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.Organization.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Organization" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.Organization" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection">
      <summary>Encapsulates the information about the parameters of a vCard property.</summary>
      <threadsafety static="true" instance="false" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.#ctor(FolkerKinzel.VCards.Models.PropertyParts.ParameterSection)">
      <summary />
      <param name="paraSec" />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Count">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AddressType">
      <summary>
        <c> TYPE </c>: Describes the type of a postal address. <c> (2,3) </c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID">
      <summary>
        <c>ALTID</c>: A common identifier that indicates, that several instances of the same property represent the same (e.g. in different languages). <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Calendar">
      <summary>
        <c>CALSCALE</c>: It is used to define the
   calendar system in which a date or date-time value is expressed.<c>(4)</c></summary>
      <value>The
   only value specified is <c>GREGORIAN</c>, which stands for
   the Gregorian system.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Charset">
      <summary>
        <c>CHARSET</c>: Indicates the character set that was used for the property. <c>(2)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.ContentLocation">
      <summary>
        <c>VALUE</c>: Indicates where the actual content of the property is located. <c>(2)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Context">
      <summary>
        <c>CONTEXT</c>: Indicates the context of the data, e.g. <c>VCARD</c> or <c>LDAP</c>. <c>(3)</c></summary>
      <remarks>Is used in the <c>SOURCE</c> property of vCard 3.0.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.DataType">
      <summary>
        <c>VALUE</c>: Indicates which of the data types predefined by the vCard standard the content of the vCard property corresponds to. <c>(3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.EmailType">
      <summary>
        <c>TYPE</c>: Describes the type of an email. <c>(2,3)</c></summary>
      <value>Use only the constants defined in the class
             <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.EmailType" />!</value>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Encoding">
      <summary>
        <c>ENCODING</c>: Indicates the encoding of the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />. <c>(2,3)</c></summary>
      <value>
        <para> The value is set automatically -
             only for <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> objects this has to be done manually. </para>
        <para> In vCard 3.0 only <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdEncoding.Base64" /> is permitted. </para>
      </value>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.ExpertiseLevel">
      <summary>
        <c>LEVEL</c>: A person's level of expertise. (For the property <see cref="P:FolkerKinzel.VCards.VCard.Expertises">VCard.Expertises</see>.) <c>(4 - RFC 6715)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.GeoPosition">
      <summary>
        <c>GEO</c>: Geographical position. <c>(4)</c></summary>
      <remarks>This parameter is only written if it is attached to a <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" /> object.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.InstantMessengerType">
      <summary>
        <c>TYPE</c>: Description of an instant messenger address. <c>(3 - RFC 4770)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Index">
      <summary>
        <c> INDEX </c>: 1-based index of a property if several instances of the same property are possible. <c> (4 - RFC 6715) </c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.InterestLevel">
      <summary>
        <c>LEVEL</c>: Degree of interest of a person in a thing. (For the properties <see cref="P:FolkerKinzel.VCards.VCard.Hobbies">VCard.Hobbies</see> and <see cref="P:FolkerKinzel.VCards.VCard.Interests">VCard.Interests</see>.) <c>(4 - RFC 6715)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Label">
      <summary>
        <c>LABEL</c>: Represents the actual text that should be put on the mailing label, when delivering a physical package to the person/object associated with the vCard. <c>([2],[3],4)</c></summary>
      <remarks>In vCard 2.1 and vCard 3.0, the content is automatically inserted into the vCard as a separate <c>LABEL</c> property.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Language">
      <summary>
        <c>LANGUAGE</c>: Language of the data in the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />. <c>(2,3,4)</c></summary>
      <value>An IETF Language Tag as defined in Section 2 of RFC 5646.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.MediaType">
      <summary>
        <c> MEDIATYPE </c>: Specifies the MIME type for the data to which a URI refers (e.g. <c>text/plain</c>). <c>(4)</c></summary>
      <value>MIME type according to RFC 2046.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.NonStandardParameters">
      <summary>Non-standard attributes. <c>(2,3,4)</c></summary>
      <remarks>In order to write non-standardized attributes in a vCard, the <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteNonStandardParameters">VcfOptions.WriteNonStandardParameters</see>-flag must be set explicitly when serializing the <see cref="T:FolkerKinzel.VCards.VCard" /> object.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Preference">
      <summary>
        <c>PREF</c> oder <c>TYPE = PREF</c>: Drückt die Präferenz für eine Eigenschaft aus. <c>(2,3,4)</c></summary>
      <value>A value between 1 and 100. 1 means most preferred.</value>
      <remarks>A differentiated preference can only be stated beginning with vCard 4.0. In vCard 2.1 and vCard 3.0 only the most preferred property is marked. As the preferred property the one is selected with the lowest numerical value for <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Preference" />.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.PropertyClass">
      <summary>
        <c>TYPE</c>: Indicates, wether a <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> is related to an individual's work place or to an individual's  personal life. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.PropertyIDs">
      <summary>
        <c> PID </c>: <see cref="T:FolkerKinzel.VCards.Models.PropertyID" />s to identify the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />. <c> (4) </c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType">
      <summary>
        <c>TYPE</c>: Specifies in a <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> (<c>RELATED</c>) the type of relationship with a person. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.SortAs">
      <summary>
        <c>SORT-AS</c>: <see cref="T:System.String" />s (case-sensitive!), which determine the sort order. (Maximum as many as fields of the compound property!) <c>([3],4)</c></summary>
      <example>
        <code>
            FN:Rene van der Harten
            N;SORT-AS="Harten,Rene":van der Harten;Rene,J.;Sir;R.D.O.N.
            </code>
      </example>
      <remarks>When serializing a file as vCard 3.0, a separate <c>SORT-STRING</c>-property, which contains the first <see cref="T:System.String" />, is automatically inserted into the vCard.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.TelephoneType">
      <summary>
        <c>TYPE</c>: Describes a telephone number. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.TimeZone">
      <summary>
        <c>TZ</c>: Time zone <c>(4)</c></summary>
      <remarks>This parameter is only written if it is attached to a <see cref="T:FolkerKinzel.VCards.Models.AddressProperty" /> object.</remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Clone">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Clear">
      <summary>Deletes all contents of the current instance.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Assign(FolkerKinzel.VCards.Models.PropertyParts.ParameterSection)">
      <summary>Assigns the content of <paramref name="other" /> to the instance.</summary>
      <param name="other">Foreign instance, whose content is adopted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> object.</returns>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Context">
      <summary>
        <c>CONTEXT</c>: Indicates the context of the data, e.g. <c>VCARD</c> or <c>LDAP</c>. <c>(3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.PropertyClass">
      <summary>
        <c>TYPE</c>: Indicates, wether a <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> is related to an individual's work place or to an individual's  personal life. <c>(2,3,4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.RelationType">
      <summary>
        <c>TYPE</c>: Specifies in a <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> (<c>RELATED</c>) the type of relationship with a person. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.AddressType">
      <summary>
        <c>TYPE</c>: Specifies the type of a postal delivery address. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.EmailType">
      <summary>
        <c>TYPE</c>: Describes the type of an email. <c>(2,3)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.TelephoneType">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.ExpertiseLevel">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.InstantMessengerType">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.InterestLevel">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Label">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Preference">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Charset">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Encoding">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Language">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.DataType">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.ContentLocation">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.MediaType">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.GeoPosition">
      <summary>
        <c>GEO</c>: Geographical position. <c>(4)</c></summary>
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.TimeZone">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Calendar">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.SortAs">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.NonStandard">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.PropertyIDs">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.AltID">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.VCdParam.Index">
      <summary />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.RelationProperty">
      <summary>Abstract base class for classes that encapsulate data from vCard properties that describe relationships with other people. These are in particular the vCard 4.0 property  <c>RELATED</c>, the vCard 2.1- and -3.0-property <c>AGENT</c>, as well as non-standard properties for specifying the name of the spouse (such as <c>X-SPOUSE</c>).</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationProperty.#ctor(FolkerKinzel.VCards.Models.RelationProperty)">
      <summary>Copy constructor.</summary>
      <param name="prop">The <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> object to clone.</param>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationProperty.#ctor(System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},System.String)">
      <summary>Constructor called by derived classes.</summary>
      <param name="relation">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.RelationTextProperty">
      <summary>Specialization of the <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> class to specify the name of a person with whom there is a relationship.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationTextProperty.#ctor(FolkerKinzel.VCards.Models.RelationTextProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationTextProperty.#ctor(System.String,System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.RelationTextProperty" /> object.</summary>
      <param name="text">Name of a person with whom there is a relationship or <c>null</c>.</param>
      <param name="relation">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.RelationTextProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.RelationTextProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationTextProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationTextProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.RelationUriProperty">
      <summary>Specialization of the <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> class to point to a person, with whom there is a relationship, with their <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUriProperty.#ctor(FolkerKinzel.VCards.Models.RelationUriProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUriProperty.#ctor(System.Uri,System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.RelationUriProperty" /> object.</summary>
      <param name="uri">A <see cref="T:System.Uri" /> of a person with whom there is a relationship.</param>
      <param name="relation">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.RelationUriProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.RelationUriProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUriProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUriProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.RelationUuidProperty">
      <summary>Specialization of the <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> class to point to a person, with whom there is a relationship, with the UUID of their <see cref="T:FolkerKinzel.VCards.VCard" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUuidProperty.#ctor(FolkerKinzel.VCards.Models.RelationUuidProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUuidProperty.#ctor(System.Guid,System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.UuidProperty" /> object.</summary>
      <param name="uuid">UUID of a person with whom there is a relationship. This can be, e.g., the value of the vCard property <c>UID</c> (<see cref="P:FolkerKinzel.VCards.VCard.UniqueIdentifier">VCard.UniqueIdentifier</see>) of this person's vCard.</param>
      <param name="relation">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.RelationUuidProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUuidProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.RelationUuidProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationUuidProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.RelationVCardProperty">
      <summary>Specialization of the <see cref="T:FolkerKinzel.VCards.Models.RelationProperty" /> class to describe a person, with whom there is a relationship, with their <see cref="T:FolkerKinzel.VCards.VCard" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationVCardProperty.#ctor(FolkerKinzel.VCards.Models.RelationVCardProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationVCardProperty.#ctor(FolkerKinzel.VCards.VCard,System.Nullable{FolkerKinzel.VCards.Models.Enums.RelationTypes},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object.</summary>
      <param name="vcard">The <see cref="T:FolkerKinzel.VCards.VCard" /> of a person, with whom there is a relationship, or  <c>null</c>.</param>
      <param name="relation">A single <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> value or a combination of several <see cref="T:FolkerKinzel.VCards.Models.Enums.RelationTypes" /> values or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.RelationVCardProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationVCardProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.RelationVCardProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.StringCollectionProperty">
      <summary>Represents vCard properties that store a collection of <see cref="T:System.String" />s .</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.StringCollectionProperty.#ctor(FolkerKinzel.VCards.Models.StringCollectionProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.StringCollectionProperty.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.StringCollectionProperty" /> object.</summary>
      <param name="value">A collection of <see cref="T:System.String" />s or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.StringCollectionProperty.#ctor(System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.StringCollectionProperty" /> object.</summary>
      <param name="value">A <see cref="T:System.String" /> or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.StringCollectionProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.StringCollectionProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.StringCollectionProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.StringCollectionProperty.ToString">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.StringCollectionProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.TextProperty">
      <summary>Represents vCard properties whose content consists of text.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TextProperty.#ctor(FolkerKinzel.VCards.Models.TextProperty)">
      <summary>Copy constructor.</summary>
      <param name="prop">The <see cref="T:FolkerKinzel.VCards.Models.TextProperty" /> object to clone.</param>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TextProperty.#ctor(System.String,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.TextProperty" /> object.</summary>
      <param name="value">A <see cref="T:System.String" /> or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.TextProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.TextProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TextProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TextProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.TimeStampProperty">
      <summary>Encapsulates the vCard property <c>REV</c>, which represents a timestamp of the last update of the <see cref="T:FolkerKinzel.VCards.VCard" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeStampProperty.#ctor(FolkerKinzel.VCards.Models.TimeStampProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeStampProperty.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.TimeStampProperty" /> object that encapsulates the time of the constructor call as a UTC time stamp.</summary>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <remarks>The constructor automatically sets the <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.DataType" /> parameter to the value <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.TimeStamp" />.</remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeStampProperty.#ctor(System.DateTimeOffset,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.TimeStampProperty" /> object with the specified time stamp.</summary>
      <param name="value">An instance of the <see cref="T:System.DateTimeOffset" /> struct.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <remarks>The constructor automatically sets the <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.DataType" /> parameter to the value <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdDataType.TimeStamp" />.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.TimeStampProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.TimeStampProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeStampProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="P:FolkerKinzel.VCards.Models.TimeStampProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeStampProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.TimeZoneID">
      <summary>Represents the standardized name of a time zone.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneID.#ctor(System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.TimeZoneID" /> object.</summary>
      <param name="timeZoneID">Identifier of the time zone. It should be an identifier from the "IANA Time Zone Database". (See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones .)</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="timeZoneID" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeZoneID" /> is <see cref="T:System.String.Empty" /> or consists only of white space.</exception>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.TimeZoneID.Value">
      <summary>Standardized name of the time zone.</summary>
      <remarks>This is the <see cref="T:System.String" /> with which the <see cref="T:FolkerKinzel.VCards.Models.TimeZoneID" /> object was initialized.</remarks>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneID.TryGetUtcOffset(System.TimeSpan@,FolkerKinzel.VCards.Models.ITimeZoneIDConverter)">
      <summary>Tries to find a corresponding UTC offset for the <see cref="T:FolkerKinzel.VCards.Models.TimeZoneID" /> object.</summary>
      <param name="utcOffset">Contains the UTC offset after the method has been successfully returned. The argument is passed uninitialized.</param>
      <param name="converter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <returns>
        <c>true</c> if a suitable UTC offset could be found, otherwise <c>false</c>.</returns>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneID.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.TimeZoneID" /> object. (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.TimeZoneID" /> object. (For debugging only.)</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.Models.TimeZoneProperty">
      <summary>Represents the vCard property TZ, which encapsulates the time zone of the vCard.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneProperty.#ctor(FolkerKinzel.VCards.Models.TimeZoneProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneProperty.#ctor(FolkerKinzel.VCards.Models.TimeZoneID,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.TimeZoneProperty" /> object.</summary>
      <param name="value">A <see cref="T:System.TimeZoneInfo" />-Objekt or <c>null</c>.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.TimeZoneProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.TimeZoneProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.TimeZoneProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.UuidProperty">
      <summary>Represents the vCard property <c>UID</c>, which stores a unique identifier for the vCard subject.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.UuidProperty.#ctor(FolkerKinzel.VCards.Models.UuidProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.UuidProperty.#ctor">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.UuidProperty" /> object with an automatically generated <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.UuidProperty.#ctor(System.Guid,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.UuidProperty" />-Objekt.</summary>
      <param name="uuid">An instance of the <see cref="T:System.Guid" /> struct.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.UuidProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.UuidProperty" />.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.UuidProperty.IsEmpty">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.UuidProperty.GetVCardPropertyValue">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.UuidProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.VCardProperty">
      <summary>Abstract base class of all classes that represent vCard properties.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.VCardProperty.#ctor(FolkerKinzel.VCards.Models.VCardProperty)">
      <summary>Copy constructor.</summary>
      <param name="prop">The <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> object to clone.</param>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.VCardProperty.#ctor(FolkerKinzel.VCards.Models.PropertyParts.ParameterSection,System.String)">
      <summary>Constructor called by derived classes.</summary>
      <param name="parameters">A <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> object that represents the parameter part of a vCard property.</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> is <c>null</c>.</exception>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.VCardProperty.Value">
      <summary>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.VCardProperty.GetVCardPropertyValue">
      <summary>Abstract access method to get the data from <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />.</summary>
      <returns>The data provided by the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" />.</returns>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.VCardProperty.Group">
      <summary>Corresponds to the Group identifier of a vCard property or is <c>null</c>, if the vCard property has no group identifier.</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.VCardProperty.Parameters">
      <summary>Contains the data of the parameter section of a vCard property. (Never <c>null</c>.)</summary>
    </member>
    <member name="P:FolkerKinzel.VCards.Models.VCardProperty.IsEmpty">
      <summary>Returns <c>true</c>, if the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> object does not contain any usable data.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.VCardProperty.ToString">
      <summary>Overload of the <see cref="M:System.Object.ToString" /> method. For debugging only.</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> object.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.VCardProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Models.XmlProperty">
      <summary>Encapsulates the data of the vCard property <c>XML</c>, which enables embedded XML data in VCF files.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.XmlProperty.#ctor(FolkerKinzel.VCards.Models.XmlProperty)">
      <summary />
      <param name="prop" />
    </member>
    <member name="M:FolkerKinzel.VCards.Models.XmlProperty.#ctor(System.Xml.Linq.XElement,System.String)">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.Models.XmlProperty" /> object.</summary>
      <param name="xmlContent">A <see cref="T:System.Xml.Linq.XElement" /> or <c>null</c>. The element must be explicitly assigned to an XML namespace (xmlns attribute). This namespace must not be the VCARD 4.0 namespace <c>urn:ietf:params:xml:ns:vcard-4.0</c>!</param>
      <param name="propertyGroup">Identifier of the group of <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> objects, which the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> should belong to, or <c>null</c> to indicate that the <see cref="T:FolkerKinzel.VCards.Models.VCardProperty" /> does not belong to any group.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="xmlContent" /> is not assigned to an XML namespace - or - <paramref name="xmlContent" /> is in the reserved namespace <c>urn:ietf:params:xml:ns:vcard-4.0</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.Models.XmlProperty.Clone">
      <inheritdoc />
    </member>
    <member name="T:FolkerKinzel.VCards.Resources.Res">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.ResourceManager">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.Culture">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.IdentifierTooLong">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.MissingMappingID">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.MissingUri">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.NoData">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.NoDataUrl">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.NoNameSpace">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.NoXName">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.PidValue">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.ReservedNameSpace">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.StreamNotWritable">
      <summary />
    </member>
    <member name="P:FolkerKinzel.VCards.Resources.Res.UndefinedEnumValue">
      <summary />
    </member>
    <member name="T:FolkerKinzel.VCards.VCard">
      <summary>Encapsulates the information contained in a vCard.</summary>
      <threadsafety static="true" instance="false" />
      <example>
        <note type="note">
For the sake of easier readability, exception handling is not used in the examples.
</note>
        <para>
Writing, reading and converting VCF files:
</para>
        <code language="cs" source="..\Examples\VCardExample.cs" />
        <para>
Example implementation for <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />:
</para>
        <code language="cs" source="..\Examples\TimeZoneIDConverter.cs" />
      </example>
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.NewLine">
      <summary>Newline used in VCF files ("\r\n").</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.ADR">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.AGENT">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.ANNIVERSARY">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.BDAY">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.CALADRURI">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.CALURI">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.CATEGORIES">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.CLASS">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.CLIENTPIDMAP">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.EMAIL">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.FBURL">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.FN">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.GENDER">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.GEO">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.IMPP">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.KEY">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.KIND">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.LABEL">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.LANG">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.LOGO">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.MAILER">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.MEMBER">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.N">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NAME">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NICKNAME">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NOTE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.ORG">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.PHOTO">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.PRODID">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.PROFILE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.RELATED">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.REV">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.ROLE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.SORT_STRING">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.SOUND">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.SOURCE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.TEL">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.TITLE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.TZ">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.UID">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.URL">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.VERSION">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.XML">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.EXPERTISE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.HOBBY">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.INTEREST">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.BIRTHPLACE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.DEATHDATE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.DEATHPLACE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.ORG_DIRECTORY">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_GENDER">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_WAB_GENDER">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_ANNIVERSARY">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_WAB_WEDDING_ANNIVERSARY">
      <summary />
      <remarks />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_SPOUSE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_WAB_SPOUSE_NAME">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.X_ASSISTANT">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_AIM">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_ICQ">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_GOOGLE_TALK">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_GTALK">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_JABBER">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_MSN">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_TWITTER">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_SKYPE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_SKYPE_USERNAME">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_GADUGADU">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_GROUPWISE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_MS_IMADDRESS">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.InstantMessenger.X_KADDRESSBOOK_X_IMADDRESS">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.KAddressbook.X_KADDRESSBOOK_X_SPOUSENAME">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.KAddressbook.X_KADDRESSBOOK_X_ANNIVERSARY">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.KAddressbook.X_KADDRESSBOOK_X_ASSISTANTSNAME">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.Evolution.X_EVOLUTION_SPOUSE">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.Evolution.X_EVOLUTION_ANNIVERSARY">
      <summary />
    </member>
    <member name="F:FolkerKinzel.VCards.VCard.PropKeys.NonStandard.Evolution.X_EVOLUTION_ASSISTANT">
      <summary />
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.#ctor">
      <summary>Initializes a new <see cref="T:FolkerKinzel.VCards.VCard" /> object.</summary>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.#ctor(FolkerKinzel.VCards.VCard)">
      <summary />
      <param name="vCard" />
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.#ctor(System.Collections.Generic.Queue{FolkerKinzel.VCards.Intls.Deserializers.VcfRow},FolkerKinzel.VCards.Intls.Deserializers.VcfDeserializationInfo,FolkerKinzel.VCards.Models.Enums.VCdVersion)">
      <summary>Initializes a <see cref="T:FolkerKinzel.VCards.VCard" /> object from a queue of <see cref="T:FolkerKinzel.VCards.Intls.Deserializers.VcfRow" /> objects.</summary>
      <param name="queue" />
      <param name="info" />
      <param name="versionHint" />
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Version">
      <summary>
        <c>VERSION</c>: Version of the vCard standard. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Access">
      <summary>
        <c>CLASS</c>: Describes the sensitivity of the information in the vCard. <c>(3)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Addresses">
      <summary>
        <c>ADR</c>: A structured representation of the physical delivery address for the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.AnniversaryViews">
      <summary>
        <c>ANNIVERSARY</c>: Defines the person's anniversary. <c>(4)</c></summary>
      <remarks>Multiple instances are only allowed, if they
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameters. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.BirthDayViews">
      <summary>
        <c>BDAY</c>: Date of birth of the individual associated with the vCard. <c>(2,3,4)</c></summary>
      <remarks>Multiple instances are only allowed in vCard 4.0, and only, if they all 
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameter. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.BirthPlaceViews">
      <summary>
        <c>BIRTHPLACE</c>: The location of the individual's birth. <c>(4 - RFC 6474)</c></summary>
      <remarks>Multiple instances are only allowed, if they
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameters. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.CalendarAddresses">
      <summary>
        <c>CALURI</c>: URLs to the person's calendar. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.CalendarUserAddresses">
      <summary>
        <c>CALADRURI</c>: URLs to use for sending a scheduling request to the person's calendar. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Categories">
      <summary>
        <c>CATEGORIES</c>: Lists of "tags" that can be used to describe the object represented by this vCard. <c>(3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.DeathDateViews">
      <summary>
        <c>DEATHDATE</c>: The individual's time of death. <c>(4 - RFC 6474)</c></summary>
      <remarks>Multiple instances are only allowed, if they
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameters. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.DeathPlaceViews">
      <summary>
        <c>DEATHPLACE</c>: The location of the individual's death. <c>(4 - RFC 6474)</c></summary>
      <remarks>Multiple instances are only allowed, if they
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameters. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.DirectoryName">
      <summary>
        <c>NAME</c>: 
            Provides a textual representation of the <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdProp.Sources" /> property. <c>(3)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.DisplayNames">
      <summary>
        <c>FN</c>: The formatted name string associated with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.EmailAddresses">
      <summary>
        <c>EMAIL</c>: The addresses for electronic mail communication with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Expertises">
      <summary>
        <c>EXPERTISE</c>: A professional subject area that the person has knowledge of. <c>(RFC 6715)</c></summary>
      <remarks>Enter the level of expertise in the parameter <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.ExpertiseLevel" />!</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.FreeOrBusyUrls">
      <summary>
        <c>FBURL</c>: Defines URLs that show when the person is "free" or "busy" on their calendar. <c>(4)</c></summary>
      <remarks>If several <see cref="T:FolkerKinzel.VCards.Models.TextProperty" /> objects are assigned, the standard property is determined by the value of <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.Preference" />. URLs of the type FTP [RFC1738] or HTTP [RFC2616] refer to an iCalendar object [RFC5545], which represents a snapshot of the next weeks or months with data for the busy time of the subject the vCard represents. If the iCalendar object is a file, its file extension should be ".ifb".</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.GenderViews">
      <summary>
        <c>GENDER</c>: Defines the person's gender. <c>(4)</c></summary>
      <remarks>Multiple instances are only allowed, if they
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameters. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.GeoCoordinates">
      <summary>
        <c>GEO</c>: Specifies latitudes and longitudes. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Hobbies">
      <summary>
        <c>HOBBY</c>: Recreational activities that the person actively engages in. <c>(4 - RFC 6715)</c></summary>
      <remarks>Define the level of interest in the parameter <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.InterestLevel" />!</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.InstantMessengerHandles">
      <summary>
        <c>IMPP</c>: List of instant messenger handles. <c>(3,4)</c></summary>
      <remarks>
        <see cref="P:FolkerKinzel.VCards.Models.TextProperty.Value" /> should specify a URI for instant messaging and presence protocol communications with the object the vCard represents. If the URI can be used for voice
      and/or video, the <see cref="P:FolkerKinzel.VCards.VCard.PhoneNumbers" /> property SHOULD be used in  addition to this property.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Interests">
      <summary>
        <c>INTEREST</c>: Recreational activities that the person is interested in, but does not necessarily take part in. <c>(4 - RFC 6715)</c></summary>
      <remarks>Define the level of interest in the parameter <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.InterestLevel" />!</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Keys">
      <summary>
        <c>KEY</c>: Public encryption keys, associated with the vCard object. <c>(2,3,4)</c></summary>
      <value>It may point to an external URL, may be plain text, or may be embedded in the vCard as a Base64 encoded block of text.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Kind">
      <summary>
        <c>KIND</c>: Defines the type of entity the vCard represents. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Languages">
      <summary>
        <c>LANG</c>: Defines languages that the person speaks. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.TimeStamp">
      <summary>
        <c>REV</c>: A timestamp for the last time the vCard was updated. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Logos">
      <summary>
        <c>LOGO</c>: Images or graphics of the logo of the organization that is associated with the individual, to which the vCard belongs. <c>(2,3,4)</c></summary>
      <value>It may point to an external URL or may be embedded in the vCard as a Base64 encoded block of text.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Mailer">
      <summary>
        <c>MAILER</c>: Type of email program used. <c>(2,3)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Members">
      <summary>
        <c>MEMBER</c>: Defines a member that is part of the group that this vCard represents. 
The <see cref="P:FolkerKinzel.VCards.VCard.Kind" />-property must be set to <see cref="F:FolkerKinzel.VCards.Models.Enums.VCdKind.Group" /> in order to use this property.  <c>(4)</c></summary>
      <remarks>
        <para>
            The standard only allows URI values. Data that cannot be converted to a <see cref="T:System.Uri" />, are read and inserted as <see cref="T:FolkerKinzel.VCards.Models.RelationTextProperty" />, but the content of a <see cref="T:FolkerKinzel.VCards.Models.RelationTextProperty" /> is only written to the VCF file, if its value can be converted to a <see cref="T:System.Uri" />.
</para>
        <para>
            The content of a <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> is written as <see cref="T:System.Uri" /> (urn: uuid: ...). The <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects are appended to the VCF file as separate vCards when writing the VCF file and the value of their <see cref="P:FolkerKinzel.VCards.VCard.UniqueIdentifier" /> property is written in the "mother"-<see cref="T:FolkerKinzel.VCards.VCard" /> as uuid-URI. If the attached <see cref="T:FolkerKinzel.VCards.VCard" /> objects did not yet have a <see cref="P:FolkerKinzel.VCards.VCard.UniqueIdentifier" /> property, automatically a new <see cref="T:System.Guid" /> is assigned to them in the serialization process.
</para>
      </remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.NameViews">
      <summary>
        <c>N</c>: A structured representation of the name of the person, place or thing associated with the vCard object. <c>(2,3,4)</c></summary>
      <remarks>Multiple instances are only allowed in vCard 4.0, and only, if they all 
             have the same <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.AltID" /> parameter. This can e.g.
             be useful, if the property is displayed in different languages.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.NickNames">
      <summary>
        <c>NICKNAME</c>: One or more descriptive/familiar names for the object represented by this vCard. <c>(3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.NonStandardProperties">
      <summary>vCard-Properties that don't belong to the standard.</summary>
      <remarks>
        <para>
          <see cref="P:FolkerKinzel.VCards.VCard.NonStandardProperties" /> saves all vCard properties that could not be evaluated, when parsing the vCard. To serialize the content of <see cref="P:FolkerKinzel.VCards.VCard.NonStandardProperties" /> into a vCard, the flag <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteNonStandardProperties">VcfOptions.WriteNonStandardProperties</see> has to be set explicitly. </para>
        <para> Some <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> objects are automatically added to the vCard to be written, if there is no standard equivalent for it. You can control this behavior with <see cref="T:FolkerKinzel.VCards.VcfOptions" />. It is therefore not recommended to assign instances of those
            <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> objects to the property <see cref="P:FolkerKinzel.VCards.VCard.NonStandardProperties" />.</para>
        <para> These vCard properties are the following: 
</para>
        <list type="bullet">
          <item>
            <c>X-AIM</c>
          </item>
          <item>
            <c>X-ANNIVERSARY</c>
          </item>
          <item>
            <c>X-EVOLUTION-SPOUSE</c>
          </item>
          <item>
            <c>X-EVOLUTION-ANNIVERSARY</c>
          </item>
          <item>
            <c>X-GADUGADU</c>
          </item>
          <item>
            <c>X-GENDER</c>
          </item>
          <item>
            <c>X-GOOGLE-TALK</c>
          </item>
          <item>
            <c>X-GROUPWISE</c>
          </item>
          <item>
            <c>X-GTALK</c>
          </item>
          <item>
            <c>X-ICQ</c>
          </item>
          <item>
            <c>X-JABBER</c>
          </item>
          <item>
            <c>X-KADDRESSBOOK-X-ANNIVERSARY</c>
          </item>
          <item>
            <c>X-KADDRESSBOOK-X-IMADDRESS</c>
          </item>
          <item>
            <c>X-KADDRESSBOOK-X-SPOUSENAME</c>
          </item>
          <item>
            <c>X-MS-IMADDRESS</c>
          </item>
          <item>
            <c>X-MSN</c>
          </item>
          <item>
            <c>X-SKYPE</c>
          </item>
          <item>
            <c>X-SKYPE-USERNAME</c>
          </item>
          <item>
            <c>X-SPOUSE</c>
          </item>
          <item>
            <c>X-TWITTER</c>
          </item>
          <item>
            <c>X-WAB-GENDER</c>
          </item>
          <item>
            <c>X-WAB-WEDDING_ANNIVERSARY</c>
          </item>
          <item>
            <c>X-WAB-SPOUSE_NAME</c>
          </item>
          <item>
            <c>X-YAHOO</c>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Notes">
      <summary>
        <c>NOTE</c>: Specifies supplemental informations or comments that are associated with the vCard. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Organizations">
      <summary>
        <c>ORG</c>: The name and optionally the unit(s) of the organization associated with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.OrgDirectories">
      <summary>
        <c>ORG-DIRECTORY</c>: A URI representing the person's work place, which can be used to look up information on the person's co-workers. <c>(RFC 6715)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.PhoneNumbers">
      <summary>
        <c>TEL</c>: Canonical number strings for a telephone numbers for telephony communication with the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Photos">
      <summary>
        <c>PHOTO</c>: Image(s) or photograph(s) of the individual, associated with the vCard. <c>(2,3,4)</c></summary>
      <value>It may point to an external URL or may be embedded in the vCard as a Base64 encoded block of text.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.ProdID">
      <summary>
        <c>PRODID</c>: The identifier for the product that created the vCard object. <c>(3,4)</c></summary>
      <value>The name should be unique worldwide. It should therefore conform to the specification for
             Formal Public Identifiers [ISO9070] or Universal Resource Names in RFC 3406.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Profile">
      <summary>
        <c>PROFILE</c>: States that the vCard is a vCard. <c>(3)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.PropertyIDMappings">
      <summary>
        <c>CLIENTPIDMAP</c>: Mappings for <see cref="T:FolkerKinzel.VCards.Models.PropertyID" />s. It is used for synchronizing different revisions of the same vCard. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Relations">
      <summary>
        <c>RELATED</c>: Other entities that the person is related to. <c>(4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Roles">
      <summary>
        <c>ROLE</c>: The role, occupation, or business category of the vCard object within an organization. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Sounds">
      <summary>
        <c>SOUND</c>: Specifies the pronunciation of the <see cref="P:FolkerKinzel.VCards.VCard.DisplayNames" /> property of the <see cref="T:FolkerKinzel.VCards.VCard" />-object. <c>(2,3,4)</c></summary>
      <value>It may point to an external URL or may be embedded in the vCard as a Base64 encoded block of text.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Sources">
      <summary>
        <c>SOURCE</c>: URLs that can be used to get the latest version of this vCard.<c>(3,4)</c></summary>
      <remarks>vCard 3.0 only allows one instance of this property.</remarks>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.TimeZones">
      <summary>
        <c>TZ</c>: The time zone(s) of the vCard object. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.Titles">
      <summary>
        <c>TITLE</c>: Specifies the job title, functional position or function of the individual, associated with the vCard object, within an organization. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.UniqueIdentifier">
      <summary>
        <c>UID</c>: Specifies a value that represents a persistent, globally unique identifier, associated with the object. <c>(2,3,4)</c></summary>
      <value>Although the standard allows any strings for identification, the library only supports UUIDs.</value>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.URLs">
      <summary>
        <c>URL</c>: URLs, pointing to websites that represent the person in some way. <c>(2,3,4)</c></summary>
    </member>
    <member name="P:FolkerKinzel.VCards.VCard.XmlProperties">
      <summary>
        <c>XML</c>: Any XML data that is attached to the vCard. <c>(4)</c></summary>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.LoadVcf(System.String,System.Text.Encoding)">
      <summary>Loads a VCF file.</summary>
      <param name="fileName">Absolute or relative path to a VCF file.</param>
      <param name="textEncoding">The text encoding to use to read the file or <c>null</c>, to read the file with the standard-compliant text encoding <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <returns>A collection of parsed <see cref="T:FolkerKinzel.VCards.VCard" /> objects, which represents the content of the VCF file.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is not a valid file path.</exception>
      <exception cref="T:System.IO.IOException">The file could not be loaded.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.ParseVcf(System.String)">
      <summary>Parses a <see cref="T:System.String" />, that represents the content of a VCF file.</summary>
      <param name="vcf">A <see cref="T:System.String" /> that represents the content of a VCF file.</param>
      <returns>A collection of parsed <see cref="T:FolkerKinzel.VCards.VCard" /> objects, which represents the content of <paramref name="vcf" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vcf" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.DeserializeVcf(System.IO.TextReader)">
      <summary>Deserializes a VCF file using a <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">A <see cref="T:System.IO.TextReader" />.</param>
      <returns>A collection of parsed <see cref="T:FolkerKinzel.VCards.VCard" /> objects, which represents the content of the VCF file.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.Clone">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.GetEnumerator">
      <summary>Returns an enumerator, which iterates through the properties of the <see cref="T:FolkerKinzel.VCards.VCard" /> object.</summary>
      <returns>An Enumerator for the <see cref="T:FolkerKinzel.VCards.VCard" />.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.System#Collections#IEnumerable#GetEnumerator">
      <inheritdoc />
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.System#Collections#Generic#IEnumerable{FolkerKinzel#VCards#VCard}#GetEnumerator">
      <summary>Explicit implementation of <see cref="T:System.Collections.Generic.IEnumerable`1"> IEnumerable&lt;VCard&gt;</see>, which enables to pass a single <see cref="T:FolkerKinzel.VCards.VCard" /> object to a method or property that requires a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects.</summary>
      <returns>An enumerator, which returns the <see cref="T:FolkerKinzel.VCards.VCard" /> object itself.</returns>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.Reference(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})">
      <summary>Returns a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which the <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects of the source collection are replaced with <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects  and in which the formerly referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects are attached as separate elements.</summary>
      <param name="vCards">A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects. The collection may be empty or may contain <c>null</c> values.</param>
      <returns>A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which the <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects of the source collection are replaced with <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects  and in which the formerly referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects are attached as separate elements.
(If the attached <see cref="T:FolkerKinzel.VCards.VCard" /> objects did not yet have a <see cref="P:FolkerKinzel.VCards.VCard.UniqueIdentifier" /> property, the method automatically assignes them a new one.)</returns>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <note type="important">
Never use this method, if you want to save a VCF file as vCard 2.1 or vCard 3.0!
</note>
        <note type="tip">
You can pass a single <see cref="T:FolkerKinzel.VCards.VCard" /> object to the method, since the <see cref="T:FolkerKinzel.VCards.VCard" /> class has an explicit implementation of <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;VCard&gt;</see>.
</note>
        <para>
The method is - if necessary - automatically called by the serialization methods of <see cref="T:FolkerKinzel.VCards.VCard" />. It only makes sense to use it in your own code, if a <see cref="T:FolkerKinzel.VCards.VCard" /> object is to be saved as vCard 4.0 and if each VCF file should only contain a single vCard. (As a rule, this approach is not advantageous as it endangers referential integrity.)
</para>
      </remarks>
      <example>
        <para>
The example demonstrates how a <see cref="T:FolkerKinzel.VCards.VCard" /> object can be saved as a vCard 4.0 if it is intended that a VCF file should only contain one single vCard. The example may also show that this approach is generally not advantageous, as it endangers referential integrity.
</para>
        <para>
The example uses the extension method <see cref="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.ReferenceVCards(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})" />, which calls <see cref="M:FolkerKinzel.VCards.VCard.Reference(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})" />.
</para>
        <note type="note">
For the sake of easier readability, exception handling has not been used in the example.
</note>
        <code language="cs" source="..\Examples\VCard40Example.cs" />
      </example>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vCards" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.Dereference(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})">
      <summary>Returns a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects are replaced by <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects if the referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects had been part of the source collection.</summary>
      <param name="vCards">A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects. The collection may be empty or may contain <c>null</c> values.</param>
      <returns>A collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in which <see cref="T:FolkerKinzel.VCards.Models.RelationUuidProperty" /> objects are replaced by <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects if the referenced <see cref="T:FolkerKinzel.VCards.VCard" /> objects had been part of the source collection.</returns>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <note type="tip">
You can pass a single <see cref="T:FolkerKinzel.VCards.VCard" /> object to the method, since the <see cref="T:FolkerKinzel.VCards.VCard" /> class has an explicit implementation of <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;VCard&gt;</see>.
</note>
        <para>
The method is automatically called by the deserialization methods of the <see cref="T:FolkerKinzel.VCards.VCard" /> class. Using it in your own code can be useful, e.g., if <see cref="T:FolkerKinzel.VCards.VCard" /> objects from different sources are combined in a common list in order to make their data searchable.
</para>
      </remarks>
      <example>
        <para>
The example shows the deserialization and analysis of a VCF file whose content refers to other VCF files. The example uses the extension method <see cref="M:FolkerKinzel.VCards.Extensions.VCardCollectionExtension.DereferenceVCards(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})" />, which calls <see cref="M:FolkerKinzel.VCards.VCard.Dereference(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard})" />.
</para>
        <note type="note">
For the sake of easier readability, exception handling has not been used in the example.
</note>
        <code language="cs" source="..\Examples\VCard40Example.cs" />
      </example>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vCards" /> is <c>null</c>.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.SaveVcf(System.String,System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.Models.ITimeZoneIDConverter,FolkerKinzel.VCards.VcfOptions)">
      <summary>Saves a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects in a common VCF file.</summary>
      <param name="vCards">The <see cref="T:FolkerKinzel.VCards.VCard" /> objects to be saved. The collection may be empty or  may contain <c>null</c> values. If the collection does not contain any <see cref="T:FolkerKinzel.VCards.VCard" /> object, no file will be written.</param>
      <param name="fileName">The file path. If the file exists, it will be overwritten.</param>
      <param name="version">The vCard version of the VCF file to be written.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <param name="tzConverter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <para>
The method may serialize more vCards than were originally elements in <paramref name="vCards" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are appended to the saved file by the method.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> or <paramref name="vCards" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is not a valid file path or <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.IO.IOException">The file could not be written.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.SerializeVcf(System.IO.Stream,System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.Models.ITimeZoneIDConverter,FolkerKinzel.VCards.VcfOptions,System.Boolean)">
      <summary>Serializes a collection of <see cref="T:FolkerKinzel.VCards.VCard" /> objects into a <see cref="T:System.IO.Stream" /> using the VCF format.</summary>
      <param name="vCards">The <see cref="T:FolkerKinzel.VCards.VCard" /> objects to be serialized. The collection may be empty or may contain <c>null</c> values.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> into which the serialized <see cref="T:FolkerKinzel.VCards.VCard" /> objects are written.</param>
      <param name="version">The vCard version used for the serialization.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <param name="leaveStreamOpen">
        <c>true</c> means that the method does not close the underlying <see cref="T:System.IO.Stream" />. The default value is <c>false</c>.</param>
      <param name="tzConverter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <note type="tip">
You can pass a single <see cref="T:FolkerKinzel.VCards.VCard" /> object to the method, since the <see cref="T:FolkerKinzel.VCards.VCard" /> class has an explicit implementation of <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;VCard&gt;</see>.
</note>
        <para>
The method may serialize more vCards than were originally elements in <paramref name="vCards" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are appended to the <see cref="T:System.IO.Stream" />.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> or <paramref name="vCards" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> does not support write operations or <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.IO.IOException">I/O error.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="stream" /> was already closed.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.ToVcfString(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.Models.ITimeZoneIDConverter,FolkerKinzel.VCards.VcfOptions)">
      <summary>Serializes <paramref name="vCards" /> as a <see cref="T:System.String" />, which represents the content of a VCF file.</summary>
      <param name="vCards">The <see cref="T:FolkerKinzel.VCards.VCard" /> objects to be serialized. The collection may be empty or may contain <c>null</c> values.</param>
      <param name="version">The vCard version used for the serialization.</param>
      <param name="tzConverter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <returns>
        <paramref name="vCards" />, serialized as a <see cref="T:System.String" />, which represents the content of a VCF file.</returns>
      <remarks>
        <note type="caution">
Although the method itself is thread-safe, the <see cref="T:FolkerKinzel.VCards.VCard" /> objects passed to the method are not. Block read and write access to these <see cref="T:FolkerKinzel.VCards.VCard" /> objects, while this method is being executed!
</note>
        <note type="tip">
You can pass a single <see cref="T:FolkerKinzel.VCards.VCard" /> object to the method, since the <see cref="T:FolkerKinzel.VCards.VCard" /> class has an explicit implementation of <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable&lt;VCard&gt;</see>.
</note>
        <para>
The method may serialize more vCards than were originally elements in <paramref name="vCards" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are appended to the <see cref="T:System.String" />.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vCards" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.OutOfMemoryException">The system is out of memory.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.SaveVcf(System.String,FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.Models.ITimeZoneIDConverter,FolkerKinzel.VCards.VcfOptions)">
      <summary>Saves the <see cref="T:FolkerKinzel.VCards.VCard" /> instance as a VCF file.</summary>
      <param name="fileName">The file path. If the file exists, it will be overwritten.</param>
      <param name="version">The vCard version of the VCF file to be written.</param>
      <param name="tzConverter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <param name="options">Options for writing the VCF file. The flags can be combined.</param>
      <remarks>
        <para>
The resulting VCF file may contain more than one vCard. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are appended to the file.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is not a valid file path or <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.IO.IOException">The file could not be written.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.SerializeVcf(System.IO.Stream,FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.Models.ITimeZoneIDConverter,FolkerKinzel.VCards.VcfOptions,System.Boolean)">
      <summary>Serializes the <see cref="T:FolkerKinzel.VCards.VCard" /> instance into a <see cref="T:System.IO.Stream" /> using the VCF format.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> into which the serialized <see cref="T:FolkerKinzel.VCards.VCard" /> object is written.</param>
      <param name="version">The vCard version used for the serialization.</param>
      <param name="tzConverter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <param name="leaveStreamOpen">
        <c>true</c> means that the method does not close the underlying <see cref="T:System.IO.Stream" />. The default value is <c>false</c>.</param>
      <remarks>
        <para>
The method may serialize more than one vCard into the <see cref="T:System.IO.Stream" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are appended to the <see cref="T:System.IO.Stream" />.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> does not support write operations or <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.IO.IOException">I/O error.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="stream" /> was already closed.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.ToVcfString(FolkerKinzel.VCards.Models.Enums.VCdVersion,FolkerKinzel.VCards.Models.ITimeZoneIDConverter,FolkerKinzel.VCards.VcfOptions)">
      <summary>Serializes the <see cref="T:FolkerKinzel.VCards.VCard" /> instance as a <see cref="T:System.String" />, which has the format of a VCF file.</summary>
      <param name="version">The vCard version used for the serialization.</param>
      <param name="tzConverter">An object that implements <see cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" /> to convert IANA time zone names to UTC offsets, or <c>null</c>.</param>
      <param name="options">Options for serializing VCF. The flags can be combined.</param>
      <returns>The <see cref="T:FolkerKinzel.VCards.VCard" />, serialized as <see cref="T:System.String" />, which has the format of a VCF file.</returns>
      <remarks>
        <para>
The method may serialize more than one vCard into the <see cref="T:System.String" />. This happens when a VCF file is saved as vCard 4.0 and when in the properties <see cref="P:FolkerKinzel.VCards.VCard.Members" /> or <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object further <see cref="T:FolkerKinzel.VCards.VCard" /> objects in the form of <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> objects can be found. These <see cref="T:FolkerKinzel.VCards.VCard" /> objects are appended to the <see cref="T:System.String" />.
</para>
        <para>
The method behaves in the same way, if a vCard 2.1 or 3.0 is serialized with the option <see cref="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard" /> and if in the property <see cref="P:FolkerKinzel.VCards.VCard.Relations" /> of a <see cref="T:FolkerKinzel.VCards.VCard" /> object a <see cref="T:FolkerKinzel.VCards.Models.RelationVCardProperty" /> object is located on whose <see cref="T:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection" /> in the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.RelationType" /> the flag <see cref="F:FolkerKinzel.VCards.Models.Enums.RelationTypes.Agent" /> is set.
</para>
      </remarks>
      <seealso cref="T:FolkerKinzel.VCards.Models.ITimeZoneIDConverter" />
      <exception cref="T:System.ArgumentException">
        <paramref name="version" /> has an undefined value.</exception>
      <exception cref="T:System.OutOfMemoryException">The system is out of memory.</exception>
    </member>
    <member name="M:FolkerKinzel.VCards.VCard.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.VCard" /> object.
             (For debugging only.)</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:FolkerKinzel.VCards.VCard" /> object.</returns>
    </member>
    <member name="T:FolkerKinzel.VCards.VcfOptions">
      <summary>Named constants to specify options for writing VCF files. The constants can be combined.</summary>
      <remarks>
        <note type="tip"> When working with the enum, use the extension methods from <see cref="T:FolkerKinzel.VCards.Extensions.VcfOptionsExtension" />.</note>
        <para>
 The flags <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteWabExtensions" />,
             <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteXExtensions" />, <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteEvolutionExtensions" /> and <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteKAddressbookExtensions" /> control the automatic generation of non-standard properties. Even if these flags are set, the non-standard properties are only generated automatically, if the selected vCard standard does not allow a standardized equivalent.
 </para>
      </remarks>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.All">
      <summary>All flags are set.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.None">
      <summary>All flags are unset.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.Default">
      <summary>Default setting (corresponds to <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteGroups" /> | <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteRfc6474Extensions" />
             | <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteRfc6715Extensions" /> | <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteImppExtension" /> | <see cref="F:FolkerKinzel.VCards.VcfOptions.WriteXExtensions" />)</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteGroups">
      <summary>Set the flag to write property group identifiers.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteEmptyProperties">
      <summary>Set the flag to also write empty properties to the vCard.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.IncludeAgentAsSeparateVCard">
      <summary>Set the flag to append in vCard 2.1 and vCard 3.0 embedded 
             <c>AGENT</c>-vCards additionally to the main vCard.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteNonStandardParameters">
      <summary>Set the flag to write Non-Standard-Parameters of the property <see cref="P:FolkerKinzel.VCards.Models.PropertyParts.ParameterSection.NonStandardParameters">ParameterSection.NonStandardParameters</see>.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteNonStandardProperties">
      <summary>Set the flag to serialize <see cref="T:FolkerKinzel.VCards.Models.NonStandardProperty" /> - objects that are stored in the property <see cref="P:FolkerKinzel.VCards.VCard.NonStandardProperties">VCard.NonStandardProperties</see>.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteRfc6474Extensions">
      <summary>Set the flag to write the extensions from RFC 6474 (<c>BIRTHPLACE</c>, <c>DEATHPLACE</c>, <c>DEATHDATE</c>). (Beginning from vCard 4.0.)</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteRfc6715Extensions">
      <summary>Set the flag to write the extensions from RFC 6715 (<c>EXPERTISE</c>, <c>HOBBY</c>, <c>INTEREST</c>, <c>ORG-DIRECTORY</c>). (Beginning from vCard 4.0.)</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteImppExtension">
      <summary>Set the flag to write the extension <c>IMPP</c> from RFC 4770 in vCard 3.0.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteXExtensions">
      <summary>Set the flag to write the following vCard properties if necessary: <c>X-AIM</c>, <c>X-GADUGADU</c>, <c>X-GOOGLE-TALK</c>, <c>X-GTALK</c>, <c>X-ICQ</c>, <c>X-JABBER</c>, <c>X-MSN</c>, <c>X-SKYPE</c>, <c>X-TWITTER</c>,
            <c>X-YAHOO</c>, <c>X-MS-IMADDRESS</c>, <c>X-GENDER</c>, <c>X-ANNIVERSARY</c> and <c>X-SPOUSE</c>.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteEvolutionExtensions">
      <summary>Set the flag to write the following vCard properties if necessary: <c>X-EVOLUTION-ANNIVERSARY</c>, <c>X-EVOLUTION-SPOUSE</c>.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteKAddressbookExtensions">
      <summary>Set the flag to write the following vCard properties if necessary: <c>X-KADDRESSBOOK-X-IMAddress</c>, <c>X-KADDRESSBOOK-X-Anniversary</c>, <c>X-KADDRESSBOOK-X-SpouseName</c>.</summary>
    </member>
    <member name="F:FolkerKinzel.VCards.VcfOptions.WriteWabExtensions">
      <summary>Set the flag to write the following vCard properties if necessary: <c>X-WAB-GENDER</c>, <c>X-WAB-WEDDING-ANNIVERSARY</c>, <c>X-WAB-SPOUSE-NAME</c>.</summary>
    </member>
  </members>
</doc>